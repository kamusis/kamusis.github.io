<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kamus&#39; Notes</title>
  <icon>http://kamusis.github.io/icon.png</icon>
  <subtitle>面朝大海，春暖花开</subtitle>
  <link href="http://kamusis.github.io/atom.xml" rel="self"/>
  
  <link href="http://kamusis.github.io/"/>
  <updated>2024-12-12T06:42:56.299Z</updated>
  <id>http://kamusis.github.io/</id>
  
  <author>
    <name>Kamus</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>How to Generate a VSIX File from VS Code Extension Source Code</title>
    <link href="http://kamusis.github.io/2024/12/12/How-to-Generate-a-VSIX-File-from-VS-Code-Extension-Source-Code/"/>
    <id>http://kamusis.github.io/2024/12/12/How-to-Generate-a-VSIX-File-from-VS-Code-Extension-Source-Code/</id>
    <published>2024-12-12T06:39:52.000Z</published>
    <updated>2024-12-12T06:42:56.299Z</updated>
    
    <content type="html"><![CDATA[<p>As I’ve been using Windsurf as my primary code editor, I encountered a situation where the vs-picgo extension wasn’t available in the Windsurf marketplace. This necessitated the need to manually package the extension from its source code. This guide documents the process of generating a VSIX file for VS Code extensions, which can then be installed manually in compatible editors like Windsurf.</p><p>In this guide, I’ll walk you through the process of generating a VSIX file from a VS Code extension’s source code. We’ll use the popular <a href="https://github.com/PicGo/vs-picgo">vs-picgo</a> extension as an example.</p><h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><p>Before we begin, make sure you have the following installed:</p><ul><li>Node.js (version 12 or higher)</li><li>npm (comes with Node.js)</li></ul><h2 id="Step-1-Install-Required-Tools"><a href="#Step-1-Install-Required-Tools" class="headerlink" title="Step 1: Install Required Tools"></a>Step 1: Install Required Tools</h2><p>First, we need to install two essential tools:</p><ul><li><code>yarn</code>: A package manager that will handle our dependencies</li><li><code>vsce</code>: The VS Code Extension Manager tool that creates VSIX packages</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install Yarn globally</span></span><br><span class="line">sudo npm install -g yarn</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install vsce globally</span></span><br><span class="line">sudo npm install -g @vscode/vsce</span><br></pre></td></tr></table></figure><h2 id="Step-2-Prepare-the-Project"><a href="#Step-2-Prepare-the-Project" class="headerlink" title="Step 2: Prepare the Project"></a>Step 2: Prepare the Project</h2><ol><li><p>Clone or download the extension source code:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/PicGo/vs-picgo.git</span><br><span class="line"><span class="built_in">cd</span> vs-picgo</span><br></pre></td></tr></table></figure></li><li><p>Install project dependencies:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn install</span><br></pre></td></tr></table></figure></li></ol><p>This command will:</p><ul><li>Read the <code>package.json</code> file</li><li>Install all required dependencies</li><li>Create or update the <code>yarn.lock</code> file</li></ul><blockquote><p><strong>Note</strong>: The <code>yarn.lock</code> file is important! Don’t delete it as it ensures consistent installations across different environments.</p></blockquote><h2 id="Step-3-Build-the-Extension"><a href="#Step-3-Build-the-Extension" class="headerlink" title="Step 3: Build the Extension"></a>Step 3: Build the Extension</h2><p>Build the extension using the production build command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn build:prod</span><br></pre></td></tr></table></figure><p>This command typically:</p><ul><li>Cleans the previous build output</li><li>Compiles TypeScript&#x2F;JavaScript files</li><li>Bundles all necessary assets</li><li>Creates the <code>dist</code> directory with the compiled code</li></ul><p>In vs-picgo’s case, the build process:</p><ol><li>Uses <code>esbuild</code> for fast bundling</li><li>Creates both extension and webview bundles</li><li>Generates source maps (disabled in production)</li><li>Optimizes the code for production use</li></ol><h2 id="Step-4-Package-the-Extension"><a href="#Step-4-Package-the-Extension" class="headerlink" title="Step 4: Package the Extension"></a>Step 4: Package the Extension</h2><p>Finally, create the VSIX file:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vsce package</span><br></pre></td></tr></table></figure><p>This command:</p><ol><li>Runs any pre-publish scripts defined in <code>package.json</code></li><li>Validates the extension manifest</li><li>Packages all required files into a VSIX file</li><li>Names the file based on the extension’s name and version (e.g., <code>vs-picgo-2.1.6.vsix</code>)</li></ol><p>The resulting VSIX file will contain:</p><ul><li>Compiled JavaScript files</li><li>Assets (images, CSS, etc.)</li><li>Extension manifest</li><li>Documentation files</li><li>License information</li></ul><h2 id="What’s-Inside-the-VSIX"><a href="#What’s-Inside-the-VSIX" class="headerlink" title="What’s Inside the VSIX?"></a>What’s Inside the VSIX?</h2><p>The VSIX file is essentially a ZIP archive with a specific structure. For vs-picgo, it includes:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vs-picgo-2.1.6.vsix</span><br><span class="line">├─ [Content_Types].xml </span><br><span class="line">├─ extension.vsixmanifest </span><br><span class="line">└─ extension/</span><br><span class="line">   ├─ LICENSE.txt</span><br><span class="line">   ├─ changelog.md</span><br><span class="line">   ├─ logo.png</span><br><span class="line">   ├─ package.json</span><br><span class="line">   ├─ package.nls.json</span><br><span class="line">   ├─ readme.md</span><br><span class="line">   └─ dist/</span><br><span class="line">      ├─ extension.js</span><br><span class="line">      └─ webview/</span><br><span class="line">         ├─ index.css</span><br><span class="line">         └─ index.js</span><br></pre></td></tr></table></figure><h2 id="Installing-the-Extension"><a href="#Installing-the-Extension" class="headerlink" title="Installing the Extension"></a>Installing the Extension</h2><p>You can install the generated VSIX file in VS Code or any compatible editor by:</p><ol><li>Opening VS Code&#x2F;Windsurf&#x2F;Cursor …</li><li>Going to the Extensions view</li><li>Clicking the “…” menu (More Actions)</li><li>Selecting “Install from VSIX…”</li><li>Choosing your generated VSIX file</li></ol><h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><p>If you encounter any issues:</p><ol><li><p><strong>Missing dist directory error</strong>:</p><ul><li>This is normal on first build</li><li>The build process will create it automatically</li></ul></li><li><p><strong>Dependency errors</strong>:</p><ul><li>Run <code>yarn install</code> again</li><li>Check if you’re using the correct Node.js version</li></ul></li><li><p><strong>VSIX packaging fails</strong>:</p><ul><li>Verify your <code>package.json</code> is valid</li><li>Ensure all required files are present</li><li>Check the extension manifest for errors</li></ul></li></ol><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Building a VS Code extension VSIX file is straightforward once you have the right tools installed. The process mainly involves installing dependencies, building the source code, and packaging everything into a VSIX file.</p><p>Remember to keep your <code>yarn.lock</code> file and always build in production mode before packaging to ensure the best performance and smallest file size for your users.</p><p>Happy extension building! 🚀</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;As I’ve been using Windsurf as my primary code editor, I encountered a situation where the vs-picgo extension wasn’t available in the</summary>
        
      
    
    
    
    
    <category term="VS Code" scheme="http://kamusis.github.io/tags/VS-Code/"/>
    
    <category term="VSIX" scheme="http://kamusis.github.io/tags/VSIX/"/>
    
    <category term="Extension" scheme="http://kamusis.github.io/tags/Extension/"/>
    
    <category term="Packaging" scheme="http://kamusis.github.io/tags/Packaging/"/>
    
    <category term="Windsurf" scheme="http://kamusis.github.io/tags/Windsurf/"/>
    
  </entry>
  
  <entry>
    <title>What is DBOS and What Should We Expect</title>
    <link href="http://kamusis.github.io/2024/11/14/What-is-DBOS-and-What-Should-We-Expect/"/>
    <id>http://kamusis.github.io/2024/11/14/What-is-DBOS-and-What-Should-We-Expect/</id>
    <published>2024-11-14T03:38:12.000Z</published>
    <updated>2024-11-19T17:26:33.523Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>The computing world is witnessing a paradigm shift in how we think about operating systems. A team of researchers has proposed DBOS (Database-Oriented Operating System), a radical reimagining of operating system architecture that puts data management at its core. But what exactly is DBOS, and why should we care?</p><h2 id="What-is-DBOS"><a href="#What-is-DBOS" class="headerlink" title="What is DBOS?"></a>What is DBOS?</h2><p>DBOS is a novel operating system architecture that treats data management as its primary concern rather than traditional OS functions like process management and I&#x2F;O. The key insight behind DBOS is that modern applications are increasingly data-centric, yet our operating systems still follow designs from the 1970s that prioritize computation over data management.</p><p>Instead of treating databases as just another application, DBOS makes database technology the fundamental building block of the operating system itself. This means core OS functions like process scheduling, resource management, and system monitoring are implemented using database principles and technologies.</p><h2 id="Who-is-behind-DBOS"><a href="#Who-is-behind-DBOS" class="headerlink" title="Who is behind DBOS?"></a>Who is behind DBOS?</h2><p>DBOS is a collaborative research project involving almost twenty researchers across multiple institutions including MIT, Stanford, UW-Madison, Google, VMware, and other organizations. The project is notably led by database pioneer Michael Stonebraker, who is an ACM Turing Award winner (2014) and Professor Emeritus at UC Berkeley, currently affiliated with MIT.</p><p>Key institutions and researchers involved include:</p><ul><li>MIT: Michael Stonebraker, Michael Cafarella, Çağatay Demiralp, and others</li><li>Stanford: Matei Zaharia, Christos Kozyrakis, and others</li><li>UW-Madison: Xiangyao Yu</li><li>Industry partners: Researchers from Google, VMware, and other organizations</li></ul><p>The people behind DBOS can be found at <a href="https://dbos-project.github.io/">DBOS Project</a>.</p><h2 id="Ultimate-Goal"><a href="#Ultimate-Goal" class="headerlink" title="Ultimate Goal"></a>Ultimate Goal</h2><p>The ultimate goal of DBOS is to create an operating system that is data-centric and data-driven, the OS is on top of a DBMS, not like today’s DBMS on top of the OS.<br>ALL system data should reside in the DBMS.</p><ul><li>Replace the “everything is a file” mantra with “everything is a table”</li><li>All system state and metadata stored in relational tables</li><li>All changes to OS state should be through database transactions</li><li>DBMS provides All functions that a DBMS can do, for example, files are blobs and tables in the DBMS.</li><li>SQL-based interface for both application and system data access</li><li>To achieve very high performance, the DBMS must leverage sophisticated caching and parallelization strategies and compile repetitive queries into machine code.</li></ul><h2 id="Benefits"><a href="#Benefits" class="headerlink" title="Benefits"></a>Benefits</h2><ol><li>Strong Security and Privacy</li></ol><ul><li>Native GDPR compliance through data-centric design</li><li>Attribute-based access control (ABAC)</li><li>Complete audit trails and data lineage</li><li>Privacy by design through unified data management</li><li>Fine-grained access control at the data level</li><li>Enhanced monitoring and threat detection</li><li>Simplified compliance with regulatory requirements</li><li>Built-in data encryption and protection mechanisms</li></ul><ol start="2"><li>Enhanced Performance and Efficiency</li></ol><ul><li>Optimized resource allocation through database-driven scheduling</li><li>Reduced data movement and copying</li><li>Better cache utilization through database techniques</li><li>Intelligent workload management</li><li>Advanced query optimization for system operations</li><li>Improved resource utilization through data-aware decisions</li><li>Reduced system overhead through unified architecture</li><li>Better support for modern hardware architectures</li></ul><ol start="3"><li>Improved Observability and Management</li></ol><ul><li>Comprehensive system-wide monitoring</li><li>Real-time analytics on system performance</li><li>Easy troubleshooting through SQL queries</li><li>Better capacity planning capabilities</li><li>Unified logging and debugging interface</li><li>Historical analysis of system behavior</li><li>Predictive maintenance capabilities</li><li>Simplified system administration</li></ul><ol start="4"><li>Advanced Application Support</li></ol><ul><li>Native support for distributed applications</li><li>Better handling of microservices architecture</li><li>Simplified state management</li><li>Enhanced support for modern cloud applications</li><li>Built-in support for data-intensive applications</li><li>Improved consistency guarantees</li><li>Better transaction management</li><li>Simplified development of distributed systems</li></ul><h2 id="Technical-Implementation"><a href="#Technical-Implementation" class="headerlink" title="Technical Implementation"></a>Technical Implementation</h2><p>DBOS proposes implementing core OS functions using database principles:</p><ul><li>Process Management: Processes and their states managed as database tables</li><li>Resource Scheduling: SQL queries and ML for intelligent scheduling decisions</li><li>System Monitoring: Metrics collection and analysis through database queries</li><li>Security: Access control and auditing via database mechanisms</li><li>Storage: File system metadata stored in relational tables</li><li>Networking: Network state and routing managed through database abstractions</li></ul><h2 id="What-Should-We-Expect"><a href="#What-Should-We-Expect" class="headerlink" title="What Should We Expect?"></a>What Should We Expect?</h2><h3 id="Near-term-Impact"><a href="#Near-term-Impact" class="headerlink" title="Near-term Impact"></a>Near-term Impact</h3><ul><li>Proof of Concept: The researchers are working on demonstrating DBOS’s capabilities through specific use cases like log processing and accelerator management.</li><li>Performance Improvements: Early implementations might show significant improvements in data-intensive workloads.</li><li>Development Tools: New tools and frameworks that leverage DBOS’s database-centric approach.</li></ul><h3 id="Long-term-Possibilities"><a href="#Long-term-Possibilities" class="headerlink" title="Long-term Possibilities"></a>Long-term Possibilities</h3><p>Cloud Native Integration: DBOS could become particularly relevant for cloud computing environments where data management is crucial.</p><ul><li>AI&#x2F;ML Operations: Better support for AI and machine learning workloads through intelligent resource management.</li><li>Privacy-First Computing: A new standard for building privacy-compliant systems from the ground up.</li></ul><h3 id="Challenges-Ahead"><a href="#Challenges-Ahead" class="headerlink" title="Challenges Ahead"></a>Challenges Ahead</h3><p>Several technical and practical challenges need to be addressed:</p><ol><li>Performance</li></ol><ul><li>Minimizing database overhead for system operations</li><li>Optimizing query performance for real-time OS operations</li><li>Efficient handling of high-frequency system events</li></ul><ol start="2"><li>Compatibility</li></ol><ul><li>Supporting existing applications and system calls</li><li>Maintaining POSIX compliance where needed</li><li>Migration path for legacy systems</li></ul><ol start="3"><li>Distributed Systems</li></ol><ul><li>Maintaining consistency across distributed nodes</li><li>Handling network partitions and failures</li><li>Scaling database operations across clusters</li></ul><ol start="4"><li>Adoption</li></ol><ul><li>Convincing stakeholders to adopt radical architectural changes</li><li>Training developers in the new paradigm</li><li>Building an ecosystem of compatible tools and applications</li></ul><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>DBOS represents a bold reimagining of operating system design for the data-centric world. While it’s still in its early stages, the potential benefits for security, privacy, and developer productivity make it an exciting project to watch. As data continues to grow in importance, DBOS’s approach might prove to be prescient.<br>The success of DBOS will largely depend on how well it can demonstrate its advantages in real-world scenarios and whether it can overcome the inherent challenges of introducing such a fundamental change to system architecture. For developers, system administrators, and anyone interested in the future of computing, DBOS is definitely worth keeping an eye on.<br>Whether DBOS becomes the next evolution in operating systems or remains an interesting academic exercise, its ideas about putting data management at the center of system design will likely influence future OS development.</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol><li><p>M. Stonebraker et al., “DBOS: A DBMS-oriented Operating System,” <em>Proceedings of the VLDB Endowment</em>, Vol. 15, No. 1, 2021.<br><a href="https://www.vldb.org/pvldb/vol15/p21-stonebraker.pdf">https://www.vldb.org/pvldb/vol15/p21-stonebraker.pdf</a></p></li><li><p>DBOS Project Official Website, MIT CSAIL and Stanford University.<br><a href="https://dbos-project.github.io/">https://dbos-project.github.io/</a></p></li><li><p>X. Yu et al., “A Case for Building Operating Systems with Database Technology,” <em>Proceedings of the 12th Conference on Innovative Data Systems Research (CIDR ‘22)</em>, 2022.<br><a href="https://www.cidrdb.org/cidr2022/papers/p82-yu.pdf">https://www.cidrdb.org/cidr2022/papers/p82-yu.pdf</a></p></li><li><p>DBOS Research Group Publications.<br><a href="https://dbos-project.github.io/papers/">https://dbos-project.github.io/papers/</a></p></li></ol><p>These references provide detailed technical information about DBOS’s architecture, implementation, and potential impact on the future of operating systems. The papers discuss various aspects from system design to performance evaluation, security considerations, and practical applications.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;&lt;p&gt;The computing world is</summary>
        
      
    
    
    
    
    <category term="PostgreSQL" scheme="http://kamusis.github.io/tags/PostgreSQL/"/>
    
    <category term="Database" scheme="http://kamusis.github.io/tags/Database/"/>
    
    <category term="DBOS" scheme="http://kamusis.github.io/tags/DBOS/"/>
    
    <category term="Operating System" scheme="http://kamusis.github.io/tags/Operating-System/"/>
    
  </entry>
  
  <entry>
    <title>Some Misconceptions About Database Performance - Application Concurrent Requests, Database Connections, and Database Connection Pools</title>
    <link href="http://kamusis.github.io/2024/08/21/Some-Misconceptions-About-Database-Performance-Application-Concurrent-Requests-Database-Connections-and-Database-Connection-Pools/"/>
    <id>http://kamusis.github.io/2024/08/21/Some-Misconceptions-About-Database-Performance-Application-Concurrent-Requests-Database-Connections-and-Database-Connection-Pools/</id>
    <published>2024-08-21T08:44:47.000Z</published>
    <updated>2024-08-21T08:46:33.645Z</updated>
    
    <content type="html"><![CDATA[<p>Let’s start with a chart from a database stress test result.</p><p><img src="https://s2.loli.net/2024/08/21/Ra2u1Q9cJNpOlUm.png" alt="1724216413686"></p><p>In the chart above, the X-axis represents the number of concurrent connections, and the Y-axis represents the TPS (Transactions Per Second) provided by the database. The stress testing tool used is pgbench, and the database is a single instance of PostgreSQL 16. TPS_PGDirect represents the TPS when pgbench directly sends the load to PostgreSQL, while TPS_PGBouncer represents the TPS when pgbench sends the load to the PGBouncer database connection pool.</p><p>We can clearly see that when the number of connections exceeds 256, the TPS begins to gradually decline when the load is sent directly to the database. When the number of connections eventually rises to over 8000, the database is almost at a standstill. However, when using PGBouncer, the TPS remains stable and excellent, with the database consistently providing high TPS regardless of the number of connections.</p><p>Many people might conclude from this chart that if the concurrent connections increase beyond a certain threshold, PostgreSQL becomes inadequate, and PGBouncer must be used to improve performance.</p><p>Some users may attempt to conduct various hardware environment combination tests to derive a reference threshold number to guide at what pressure PostgreSQL can cope, and once it exceeds a certain pressure, PGBouncer should be enabled.</p><p>So, is this conclusion correct? And does testing out a threshold number have real guiding significance?</p><h2 id="Understanding-Concurrent-Performance"><a href="#Understanding-Concurrent-Performance" class="headerlink" title="Understanding Concurrent Performance"></a>Understanding Concurrent Performance</h2><p>To determine how many concurrent business requests a database can handle, we should focus on the Y-axis from the test chart above, rather than the X-axis. The Y-axis TPS represents the number of transactions the database can process per second, while the X-axis connection count is merely the database connection number we configured ourselves (which can be simply understood as the max_connections parameter value). We can observe that at 256 connections, the direct database stress test with pgbench allows the database to provide over 50,000 TPS, which is actually almost the highest number in the entire stress test (WITHOUT PGBouncer). Subsequent tests using PGBouncer, this number was not significantly exceeded. Therefore, PGBouncer is not a weapon to improve database performance.</p><p>What is performance? Performance means: for a determined business transaction pressure (how much work a business transaction needs to handle, such as how much CPU, memory, and IO it consumes), the more transactions the database can execute, the higher the performance. In the chart above, this is represented by the Y-axis TPS (Transactions Per Second).</p><p>For example, suppose a user request (Application Request) requires executing 5 transactions from start to finish, and assume these transactions consume similar amounts of time (even if there are differences, we can always get the average transaction runtime in a system). In this case, 50,000 TPS means the database can handle 10,000 user requests per second, which can be simply understood as handling 10,000 concurrent users. If TPS rises to 100,000, the database can handle 20,000 concurrent users; if TPS drops to 10,000, it can only handle 2,000 concurrent users. This is a simple calculation logic, and in this description, we did not mention anything about database connections (User Connections).</p><p>So why does it seem like PGBouncer improves performance when the number of connections continues to increase? Because in this situation, PGBouncer acts as a limiter on database connections, reducing the extra overhead caused by the database&#x2F;operating system handling too many connections, allowing the database and operating system to focus on processing the business requests sent from each connection, and enabling user requests exceeding the connection limit to share database connections. What PGBouncer does is: if your restaurant can only provide 10 tables, then I only allow 10 tables of guests to enter, and other guests have to wait outside.</p><p>However, why should we let 100 tables of guests rush into the restaurant all at once? Without PGBouncer, can’t we control allowing only 10 tables of guests to enter? In modern applications, application-side connection pools are more commonly used, such as connection pools in various middleware software (Weblogic, WebSphere, Tomcat, etc.) or dedicated JDBC connection pools like HikariCP.</p><p>Exceeding the number of connections that can be handled is unnecessary. When the database is already at its peak processing capacity, having more connections will not improve overall processing capability; instead, it will slow down the entire database.</p><p>To summarize the meaning of the chart above more straightforwardly: when the total number of database connections is at 256, the database reaches its peak processing capacity, and direct database connections can provide 50,000 TPS without any connection pool. If 50,000 TPS cannot meet the application’s concurrent performance requirements, increasing the number of connections will not help. But if connections are increased (wrongly, without any other control), a layer of connection pool like PGBouncer can be added as a connection pool buffer to keep performance stable at around 50,000 TPS.</p><p>So, do we have any reason to arbitrarily increase the number of connections? No. What we need to do is: allow the database to open only the number of connections within its processing capacity and enable these connections to be shared by more user requests. When the restaurant size is fixed, the higher the turnover rate, the higher the restaurant’s daily revenue.</p><h2 id="How-to-Ask-Questions-About-Performance"><a href="#How-to-Ask-Questions-About-Performance" class="headerlink" title="How to Ask Questions About Performance"></a>How to Ask Questions About Performance</h2><p>Instead of asking: how can we ensure the database provides sufficient TPS with 4000 connections, we should ask: how can we ensure the database provides 50,000 TPS.</p><p>Because the number of connections is not a performance metric, it is merely a parameter configuration option.</p><p>In the example above, a connection count of 4000 or 8000 is not a fixed value, nor is it an optimized value. We cannot try to do more additional database optimizations on an unoptimized, modifiable parameter setting, as this may lead to a reversal of priorities. If we can already provide maximum processing capacity with 256 fully loaded database connections, why optimize a database with more than 256 connections? We should ensure the database always runs at full capacity with a maximum of 256 connections.</p><p>Now, our question about performance can be more specific. Suppose we have multiple sets of database servers with different configurations; what should the fully loaded connection count be for each set to achieve optimal processing capacity?</p><p>This requires testing. However, we will ultimately find that this fully loaded connection count is usually related only to the database server’s hardware resources, such as the number of CPU cores, CPU speed, memory size, storage speed, and the bandwidth and latency between storage and host.</p><h2 id="Is-Database-Application-Performance-Only-Related-to-Hardware-Resources"><a href="#Is-Database-Application-Performance-Only-Related-to-Hardware-Resources" class="headerlink" title="Is Database Application Performance Only Related to Hardware Resources?"></a>Is Database Application Performance Only Related to Hardware Resources?</h2><p>Of course not. Concurrent performance (P) &#x3D; Hardware processing capability (H) &#x2F; Business transaction pressure (T).</p><p>As mentioned earlier, the performance metric TPS is for a “determined business transaction pressure,” meaning a determined T value.</p><p>When the T value is determined, we can only improve the H value to further enhance the P value. Conversely, there is naturally another optimization approach: reducing the T value. There are various ways to reduce the T value, such as adding necessary indexes, rewriting SQL, using partitioned tables, etc. The optimization plan should be formulated based on where the T value is consumed most, which is another topic.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>To answer the two initial questions:</p><ol><li>If concurrent connections increase beyond a certain threshold, PostgreSQL becomes inadequate, and PGBouncer must be used to improve performance. Is this conclusion correct?</li></ol><p>If we must create more connections to the database than the hardware processing capacity for certain hardware resources, using PGBouncer can stabilize performance. However, we have no reason to create more connections than the hardware processing capacity. We have various means to control the maximum number of connections the database can open, and various middleware solutions can provide connection pools. From this perspective, PGBouncer does not improve database performance; it merely reduces concurrency conflicts, doing what any connection pool software can do.</p><ol start="2"><li>Is it meaningful to attempt various hardware environment combination tests to derive a reference threshold number to guide at what pressure PostgreSQL can cope, and once it exceeds a certain pressure, PGBouncer should be enabled?</li></ol><p>It has some significance, but simple stress tests like pgbench are not enough to guide real applications. Concurrent performance (P) &#x3D; Hardware processing capability (H) &#x2F; Business transaction pressure (T). Testing in a determined hardware environment means the H value is fixed, so we should focus on T during testing. The T value provided by pgbench is a very simple transaction pressure (only four tables, simple CRUD operations), and the P value tested under this pressure can only be used as a reference. To guide application deployment, typical transaction pressure of the application itself must be abstracted for testing to have guiding significance.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Let’s start with a chart from a database stress test result.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2024/08/21/Ra2u1Q9cJNpOlUm.png&quot;</summary>
        
      
    
    
    
    
    <category term="PostgreSQL" scheme="http://kamusis.github.io/tags/PostgreSQL/"/>
    
    <category term="Database" scheme="http://kamusis.github.io/tags/Database/"/>
    
    <category term="Performance" scheme="http://kamusis.github.io/tags/Performance/"/>
    
  </entry>
  
  <entry>
    <title>Flashback Features in MogDB</title>
    <link href="http://kamusis.github.io/2024/06/15/Flashback-Features-in-MogDB/"/>
    <id>http://kamusis.github.io/2024/06/15/Flashback-Features-in-MogDB/</id>
    <published>2024-06-15T09:32:07.000Z</published>
    <updated>2024-06-15T09:32:07.780Z</updated>
    
    <content type="html"><![CDATA[<h2 id="What-is-Database-Flashback"><a href="#What-is-Database-Flashback" class="headerlink" title="What is Database Flashback"></a>What is Database Flashback</h2><p>The flashback capability of a database allows users to query the contents of a table at a specific point in the past or quickly restore a table or even the entire database to a time before an erroneous operation. This feature can be extremely useful, and sometimes even a lifesaver.</p><p>Database flashback capabilities are generally divided into three levels:</p><ul><li><strong>Row-level Flashback:</strong> Also known as flashback query, this typically involves using a SELECT statement to retrieve data from a table as it was at a specific point in time, such as right before a DELETE command was issued.</li><li><strong>Table-level Flashback:</strong> Also known as flashback table, this usually involves using specialized DDL statements to recreate a table from the recycle bin. This is often used to recover from a TRUNCATE TABLE or DROP TABLE operation.</li><li><strong>Database-level Flashback:</strong> Also known as flashback database, this involves using specialized DDL statements to restore the entire database to a previous point in time. Unlike PITR (Point-In-Time Recovery) which involves restoring from backups, flashback database is faster as it does not require restoring the entire database from backup sets.</li></ul><p>In MogDB version 5.0, only flashback query and flashback table have been implemented so far. Flashback database has not yet been implemented (Oracle has supported flashback database since version 10g).</p><h2 id="Scenario"><a href="#Scenario" class="headerlink" title="Scenario"></a>Scenario</h2><p>Imagine a regrettable scenario (<strong>Note:</strong> do not run the DELETE SQL command in a production environment).</p><p>You have a table that records account names and account balances.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> accounts;</span><br><span class="line"> name <span class="operator">|</span> amount</span><br><span class="line"><span class="comment">------+--------</span></span><br><span class="line"> A    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> B    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> C    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> D    <span class="operator">|</span>     <span class="number">99</span></span><br><span class="line">(<span class="number">4</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure><p>You intended to execute an SQL command to delete account records with a balance of 99 units. Normally, this should delete one record. To demonstrate, let’s use SELECT instead of DELETE.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> accounts <span class="keyword">where</span> amount<span class="operator">=</span><span class="number">99</span>;</span><br><span class="line"> name <span class="operator">|</span> amount</span><br><span class="line"><span class="comment">------+--------</span></span><br><span class="line"> D    <span class="operator">|</span>     <span class="number">99</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure><p>However, the minus sign “-“ and the equals sign “&#x3D;” are adjacent on the keyboard, and you have fat fingers, so you accidentally pressed the minus sign. As a result, the command you sent to the database looks like this:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> accounts <span class="keyword">where</span> amount<span class="number">-99</span>;</span><br></pre></td></tr></table></figure><p>For demonstration purposes, we’ll still use SELECT instead of DELETE.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> accounts <span class="keyword">where</span> amount<span class="number">-99</span>;</span><br><span class="line"> name <span class="operator">|</span> amount</span><br><span class="line"><span class="comment">------+--------</span></span><br><span class="line"> A    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> B    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> C    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line">(<span class="number">3</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure><p>A terrifying thing happens: all data except the record with a balance exactly equal to 99 is returned. This means that if this were the DELETE command mentioned above, you would have deleted all accounts with a balance not equal to 99.</p><p>The good news is that starting from MogDB version 3.0, validation for such dangerous syntax involving the minus sign has been added. Now, executing the same SQL will result in an error.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">delete</span> <span class="keyword">from</span> accounts <span class="keyword">where</span> amount<span class="number">-99</span>;</span><br><span class="line">ERROR:  argument <span class="keyword">of</span> <span class="keyword">WHERE</span> must be type <span class="type">boolean</span>, <span class="keyword">not</span> type <span class="type">integer</span></span><br><span class="line">LINE <span class="number">1</span>: <span class="keyword">delete</span> <span class="keyword">from</span> accounts <span class="keyword">where</span> amount<span class="number">-99</span>;</span><br><span class="line">                                   <span class="operator">^</span></span><br></pre></td></tr></table></figure><p>However, in the community editions of openGauss, MySQL, or MariaDB, such dangerous syntax can still be executed normally.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">gsql ((openGauss <span class="number">6.0</span><span class="number">.0</span><span class="operator">-</span>RC1 build ed7f8e37) compiled <span class="keyword">at</span> <span class="number">2024</span><span class="number">-03</span><span class="number">-31</span> <span class="number">12</span>:<span class="number">41</span>:<span class="number">30</span> <span class="keyword">commit</span> <span class="number">0</span> <span class="keyword">last</span> mr  )</span><br><span class="line">Non<span class="operator">-</span>SSL connection (SSL connection <span class="keyword">is</span> recommended <span class="keyword">when</span> requiring high<span class="operator">-</span>security)</span><br><span class="line">Type &quot;help&quot; <span class="keyword">for</span> help.</span><br><span class="line"></span><br><span class="line">openGauss<span class="operator">=</span># <span class="keyword">select</span> version();</span><br><span class="line">                                                                          version</span><br><span class="line"><span class="comment">------------------------------------------------------------------------------------------------------------------------------------------------------------</span></span><br><span class="line"> (openGauss <span class="number">6.0</span><span class="number">.0</span><span class="operator">-</span>RC1 build ed7f8e37) compiled <span class="keyword">at</span> <span class="number">2024</span><span class="number">-03</span><span class="number">-31</span> <span class="number">12</span>:<span class="number">41</span>:<span class="number">30</span> <span class="keyword">commit</span> <span class="number">0</span> <span class="keyword">last</span> mr   <span class="keyword">on</span> aarch64<span class="operator">-</span><span class="literal">unknown</span><span class="operator">-</span>linux<span class="operator">-</span>gnu, compiled <span class="keyword">by</span> g<span class="operator">+</span><span class="operator">+</span> (GCC) <span class="number">10.3</span><span class="number">.1</span>, <span class="number">64</span><span class="operator">-</span>bit</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line">openGauss<span class="operator">=</span># <span class="keyword">create</span> <span class="keyword">table</span> accounts (name varchar2, amount <span class="type">int</span>);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span></span><br><span class="line">openGauss<span class="operator">=</span># <span class="keyword">insert</span> <span class="keyword">into</span> accounts <span class="keyword">values</span> (<span class="string">&#x27;A&#x27;</span>,<span class="number">100</span>),(<span class="string">&#x27;B&#x27;</span>,<span class="number">100</span>),(<span class="string">&#x27;C&#x27;</span>,<span class="number">100</span>),(<span class="string">&#x27;D&#x27;</span>,<span class="number">99</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="number">0</span> <span class="number">4</span></span><br><span class="line"></span><br><span class="line">openGauss<span class="operator">=</span># <span class="keyword">delete</span> <span class="keyword">from</span> accounts <span class="keyword">where</span> amount<span class="number">-99</span>;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="number">3</span></span><br><span class="line">openGauss<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> accounts;</span><br><span class="line"> name <span class="operator">|</span> amount</span><br><span class="line"><span class="comment">------+--------</span></span><br><span class="line"> D    <span class="operator">|</span>     <span class="number">99</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure><p>No matter what kind of erroneous operation occurs, suppose a data deletion error really happens. In MogDB, you still have the flashback feature available for recovery.</p><h2 id="Flashback-Feature-in-MogDB"><a href="#Flashback-Feature-in-MogDB" class="headerlink" title="Flashback Feature in MogDB"></a>Flashback Feature in MogDB</h2><p>The flashback feature and its related implementations have undergone some changes since MogDB version 3.0.</p><ol><li><p><strong>Applicable Only to Ustore Storage Engine:</strong></p><p>The flashback feature only works for tables using the ustore storage engine. The default astore no longer supports flashback queries. Therefore, you need to set <code>enable_ustore=on</code>. This parameter is off by default, and changing it requires a database restart to take effect.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> enable_ustore<span class="operator">=</span><span class="keyword">on</span>;</span><br><span class="line">NOTICE:  please restart the database <span class="keyword">for</span> the POSTMASTER level <span class="keyword">parameter</span> <span class="keyword">to</span> take effect.</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span></span><br></pre></td></tr></table></figure></li><li><p><strong>Setting <code>undo_retention_time</code>:</strong></p><p>This parameter specifies the retention time for old version data in the rollback segment, equivalent to the allowable time span for flashback queries. The default value is 0, meaning any flashback query will encounter a “restore point not found” error. Changing this parameter does not require a database restart.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> undo_retention_time<span class="operator">=</span><span class="number">86400</span>; <span class="comment">-- 86400 seconds = 24 hours</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span></span><br></pre></td></tr></table></figure></li><li><p><strong>Enabling Database Recycle Bin for Truncate or Drop Operations:</strong></p><p>To flashback a table from a truncate or drop operation, you need to enable the database recycle bin by setting <code>enable_recyclebin=on</code>. This parameter is off by default, and changing it does not require a database restart.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> enable_recyclebin<span class="operator">=</span><span class="keyword">on</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">SET</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="Creating-and-Populating-the-Ustore-Table"><a href="#Creating-and-Populating-the-Ustore-Table" class="headerlink" title="Creating and Populating the Ustore Table"></a>Creating and Populating the Ustore Table</h3><p>Create a ustore-based <code>accounts</code> table and insert some test data.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">create</span> <span class="keyword">table</span> accounts (name varchar2, amount <span class="type">int</span>) <span class="keyword">with</span> (storage_type<span class="operator">=</span>ustore);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span></span><br><span class="line"></span><br><span class="line">MogDB<span class="operator">=</span># <span class="keyword">insert</span> <span class="keyword">into</span> accounts <span class="keyword">values</span> (<span class="string">&#x27;A&#x27;</span>,<span class="number">100</span>),(<span class="string">&#x27;B&#x27;</span>,<span class="number">100</span>),(<span class="string">&#x27;C&#x27;</span>,<span class="number">100</span>),(<span class="string">&#x27;D&#x27;</span>,<span class="number">99</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="number">0</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="Simulating-an-Erroneous-Deletion"><a href="#Simulating-an-Erroneous-Deletion" class="headerlink" title="Simulating an Erroneous Deletion"></a>Simulating an Erroneous Deletion</h3><p>Now, due to some erroneous operation, you delete all account records with amounts not equal to 99.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">delete</span> <span class="keyword">from</span> accounts <span class="keyword">where</span> amount<span class="operator">&lt;&gt;</span><span class="number">99</span>;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> accounts;</span><br><span class="line"> name <span class="operator">|</span> amount</span><br><span class="line"><span class="comment">------+--------</span></span><br><span class="line"> D    <span class="operator">|</span>     <span class="number">99</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure><h3 id="Flashback-Query"><a href="#Flashback-Query" class="headerlink" title="Flashback Query"></a>Flashback Query</h3><p>When you realize the mistake, it might be 1 minute or 1 hour later. As long as it is within 24 hours (due to the <code>undo_retention_time</code> setting), you can recover the data.</p><p>Check the current timestamp and estimate the timestamp at the time of the erroneous operation. For simplicity, let’s assume you noted the system’s timestamp before issuing the delete command.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> sysdate;</span><br><span class="line">       sysdate</span><br><span class="line"><span class="comment">---------------------</span></span><br><span class="line"> <span class="number">2024</span><span class="number">-06</span><span class="number">-13</span> <span class="number">18</span>:<span class="number">40</span>:<span class="number">18</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure><p>Issue a flashback query to retrieve the data as it was at the specified timestamp.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> accounts timecapsule <span class="type">TIMESTAMP</span> to_timestamp(<span class="string">&#x27;2024-06-13 18:40:18&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD HH24:MI:SS&#x27;</span>);</span><br><span class="line"> name <span class="operator">|</span> amount</span><br><span class="line"><span class="comment">------+--------</span></span><br><span class="line"> A    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> B    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> C    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> D    <span class="operator">|</span>     <span class="number">99</span></span><br><span class="line">(<span class="number">4</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure><h3 id="Recovering-Data"><a href="#Recovering-Data" class="headerlink" title="Recovering Data"></a>Recovering Data</h3><p>You can recover the data by creating a temporary table with the flashback query results and then inserting the data back into the original table.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">create</span> <span class="keyword">table</span> tmp_accounts <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> accounts timecapsule <span class="type">TIMESTAMP</span> to_timestamp(<span class="string">&#x27;2024-06-13 18:40:18&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD HH24:MI:SS&#x27;</span>) <span class="keyword">where</span> amount<span class="operator">&lt;&gt;</span><span class="number">99</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="number">0</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tmp_accounts;</span><br><span class="line"> name <span class="operator">|</span> amount</span><br><span class="line"><span class="comment">------+--------</span></span><br><span class="line"> A    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> B    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> C    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line">(<span class="number">3</span> <span class="keyword">rows</span>)</span><br><span class="line"></span><br><span class="line">MogDB<span class="operator">=</span># <span class="keyword">insert</span> <span class="keyword">into</span> accounts <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tmp_accounts;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="number">0</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> accounts;</span><br><span class="line"> name <span class="operator">|</span> amount</span><br><span class="line"><span class="comment">------+--------</span></span><br><span class="line"> D    <span class="operator">|</span>     <span class="number">99</span></span><br><span class="line"> A    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> B    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> C    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line">(<span class="number">4</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure><p>Alternatively, if no new data has been added to the table after the erroneous operation, you can use the <code>timecapsule table</code> command to flashback the entire table to the specified timestamp.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># timecapsule <span class="keyword">table</span> accounts <span class="keyword">to</span> <span class="type">TIMESTAMP</span> to_timestamp(<span class="string">&#x27;2024-06-13 18:40:18&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD HH24:MI:SS&#x27;</span>);</span><br><span class="line">TimeCapsule <span class="keyword">Table</span></span><br><span class="line"></span><br><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> accounts;</span><br><span class="line"> name <span class="operator">|</span> amount</span><br><span class="line"><span class="comment">------+--------</span></span><br><span class="line"> D    <span class="operator">|</span>     <span class="number">99</span></span><br><span class="line"> A    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> B    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> C    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line">(<span class="number">4</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure><h3 id="Recovering-from-Truncate-or-Drop-Table"><a href="#Recovering-from-Truncate-or-Drop-Table" class="headerlink" title="Recovering from Truncate or Drop Table"></a>Recovering from Truncate or Drop Table</h3><p>If you accidentally issue a <code>TRUNCATE</code> or <code>DROP</code> command, In this situation, the before commands don’t help because the data has been truncated.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">truncate</span> <span class="keyword">table</span> accounts;</span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span></span><br><span class="line"></span><br><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> accounts timecapsule <span class="type">TIMESTAMP</span> to_timestamp(<span class="string">&#x27;2024-06-14 02:10:28&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD HH24:MI:SS&#x27;</span>);</span><br><span class="line">ERROR:  Snapshot too <span class="keyword">old</span>, ScanRelation, the info: snapxmax <span class="keyword">is</span> <span class="number">45865</span>, snapxmin <span class="keyword">is</span> <span class="number">45865</span>, csn <span class="keyword">is</span> <span class="number">30047</span>, relfrozenxid64 <span class="keyword">is</span> <span class="number">45877</span>, globalRecycleXid <span class="keyword">is</span> <span class="number">17356.</span></span><br><span class="line"></span><br><span class="line">MogDB<span class="operator">=</span># timecapsule <span class="keyword">table</span> accounts <span class="keyword">to</span> <span class="type">TIMESTAMP</span> to_timestamp(<span class="string">&#x27;2024-06-14 02:10:28&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD HH24:MI:SS&#x27;</span>);</span><br><span class="line">TimeCapsule <span class="keyword">Table</span></span><br><span class="line"></span><br><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> accounts;</span><br><span class="line"> name <span class="operator">|</span> amount</span><br><span class="line"><span class="comment">------+--------</span></span><br><span class="line">(<span class="number">0</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure><p>For <code>TRUNCATE</code> or <code>DROP TABLE</code> operations, use the <code>to before</code> keyword to recover the table from the recycle bin.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># timecapsule <span class="keyword">table</span> accounts <span class="keyword">to</span> before <span class="keyword">truncate</span>;</span><br><span class="line">TimeCapsule <span class="keyword">Table</span></span><br><span class="line"></span><br><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> accounts;</span><br><span class="line"> name <span class="operator">|</span> amount</span><br><span class="line"><span class="comment">------+--------</span></span><br><span class="line"> A    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> B    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> C    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> D    <span class="operator">|</span>     <span class="number">99</span></span><br><span class="line">(<span class="number">4</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure><p>Similarly, if the table was dropped, you can recover it from the recycle bin using the same <code>to before</code> keyword.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">drop</span> <span class="keyword">table</span> accounts;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span></span><br><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> accounts;</span><br><span class="line">ERROR:  relation &quot;accounts&quot; does <span class="keyword">not</span> exist <span class="keyword">on</span> dn_6001</span><br><span class="line">LINE <span class="number">1</span>: <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> accounts;</span><br><span class="line">                      <span class="operator">^</span></span><br><span class="line">MogDB<span class="operator">=</span># timecapsule <span class="keyword">table</span> accounts <span class="keyword">to</span> before <span class="keyword">drop</span>;</span><br><span class="line">TimeCapsule <span class="keyword">Table</span></span><br><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> accounts;</span><br><span class="line"> name <span class="operator">|</span> amount</span><br><span class="line"><span class="comment">------+--------</span></span><br><span class="line"> A    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> B    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> C    <span class="operator">|</span>    <span class="number">100</span></span><br><span class="line"> D    <span class="operator">|</span>     <span class="number">99</span></span><br><span class="line">(<span class="number">4</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>MogDB’s flashback feature is an essential tool for recovering from accidental data deletions, truncations, or drops. By enabling the ustore storage engine, setting an appropriate <code>undo_retention_time</code>, and activating the recycle bin, you can leverage flashback queries and the <code>timecapsule</code> command to restore your data efficiently. These features ensure that you can maintain data integrity and quickly recover from human errors, providing robust data protection and operational resilience.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;What-is-Database-Flashback&quot;&gt;&lt;a href=&quot;#What-is-Database-Flashback&quot; class=&quot;headerlink&quot; title=&quot;What is Database Flashback&quot;&gt;&lt;/a&gt;What is</summary>
        
      
    
    
    
    
    <category term="MogDB" scheme="http://kamusis.github.io/tags/MogDB/"/>
    
  </entry>
  
  <entry>
    <title>Exploring Oracle Compatibility in MogDB (Series I) - Data Dictionary</title>
    <link href="http://kamusis.github.io/2024/06/06/Exploring-Oracle-Compatibility-in-MogDB-Series-I-Data-Dictionary/"/>
    <id>http://kamusis.github.io/2024/06/06/Exploring-Oracle-Compatibility-in-MogDB-Series-I-Data-Dictionary/</id>
    <published>2024-06-06T03:45:38.000Z</published>
    <updated>2024-06-10T05:32:42.662Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Install-PTK"><a href="#Install-PTK" class="headerlink" title="Install PTK"></a>Install PTK</h2><p>PTK is the optimal tool for installing the MogDB database (an enterprise-grade commercial distribution based on openGauss) or the openGauss database, offering a seamless and smooth installation experience.</p><p>To install PTK, simply run the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --proto <span class="string">&#x27;=https&#x27;</span> --tlsv1.2 -sSf https://cdn-mogdb.enmotech.com/ptk/install.sh | sh</span><br></pre></td></tr></table></figure><p>This command will automatically install PTK in the user’s home directory under <code>$HOME/.ptk</code>. This directory will serve as the working directory for PTK, storing cache files, metadata information, cluster configuration information, backup information, and other related files. Additionally, the installation command will add the path <code>$HOME/.ptk/bin</code> to the PATH environment variable in the corresponding shell profile file, enabling the user to use the <code>ptk</code> command directly after logging into the server. In this tutorial, we installed PTK using the root user, although this is not mandatory.</p><p>For more detailed PTK installation instructions, please refer to: <a href="https://docs.mogdb.io/en/ptk/v1.1/install">PTK Installation Guide</a>.</p><p>The environment used for this series of articles is CentOS 7.6 for x86-64. MogDB must currently run on a Linux operating system. If you wish to install MogDB on macOS or Windows, you can do so using container deployment. For more information, refer to: <a href="https://docs.mogdb.io/en/mogdb/v5.0/container-based-installation#container-based-mogdb-installation">Container-based MogDB Installation</a></p><p>To check your CentOS version, you can use the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/centos-release</span></span><br><span class="line">CentOS Linux release 7.6.1810 (Core)</span><br></pre></td></tr></table></figure><p>MogDB can also run on ARM architecture CPUs. You can list all supported CPU brands using the <code>ptk candidate cpu</code> command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ptk candidate cpu</span></span><br><span class="line">    CPU Model</span><br><span class="line">------------------</span><br><span class="line">  Cortex-ARM64</span><br><span class="line">  Kunpeng-ARM64</span><br><span class="line">  Phythium-ARM64</span><br><span class="line">  Hygon-x64</span><br><span class="line">  Intel-x64</span><br><span class="line">  AMD-x64</span><br><span class="line">  zhaoxin-x64</span><br></pre></td></tr></table></figure><p>If PTK notifies you of a new version while running any command, you can upgrade it directly using the <code>ptk self upgrade</code> command.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ptk ls</span></span><br><span class="line">  cluster_name | <span class="built_in">id</span> | addr | user | data_dir | db_version | create_time | comment</span><br><span class="line">---------------+----+------+------+----------+------------+-------------+----------</span><br><span class="line">Warning: New version <span class="string">&#x27;1.5.0&#x27;</span> is available, you are using ptk version <span class="string">&#x27;1.1.3&#x27;</span>.</span><br><span class="line">You can upgrade ptk via <span class="built_in">command</span>: <span class="string">&#x27;ptk self upgrade&#x27;</span></span><br><span class="line">You can also <span class="built_in">set</span> environment by <span class="string">&#x27;export PTK_NO_CHECK_VERSION=true&#x27;</span> to <span class="built_in">disable</span> this warning</span><br><span class="line"><span class="comment"># ptk self upgrade</span></span><br><span class="line">INFO[2024-06-06T11:59:01.105] current version: 1.1.3 release, target version: latest</span><br><span class="line">INFO[2024-06-06T11:59:01.105] download package from http://cdn-mogdb.enmotech.com/ptk/latest/ptk_linux_x86_64.tar.gz</span><br><span class="line">INFO[2024-06-06T11:59:01.105] downloading ptk_linux_x86_64.tar.gz ...</span><br><span class="line">&gt; ptk_linux_x86_64.tar.gz: 17.78 MiB / 20.08 MiB [-----------------------------------------------------------------------&gt;_________] 88.52% 27.93 MiB p/s ETA 0s</span><br><span class="line">&gt; ptk_linux_x86_64.tar.gz: 20.08 MiB / 20.08 MiB [---------------------------------------------------------------------------------] 100.00% 29.07 MiB p/s 900ms</span><br><span class="line">INFO[2024-06-06T11:59:02.956] upgrade ptk successfully</span><br><span class="line">[root@mogdb-kernel-0004 ~]<span class="comment"># ptk version</span></span><br><span class="line">PTK Version:    v1.5.0 release</span><br><span class="line">Go Version:     go1.19.10</span><br><span class="line">Build Date:     2024-06-04T17:16:07</span><br><span class="line">Git Hash:       edd5dbb0</span><br><span class="line">OS/Arch:        linux/amd64</span><br></pre></td></tr></table></figure><h2 id="Install-MogDB"><a href="#Install-MogDB" class="headerlink" title="Install MogDB"></a>Install MogDB</h2><p>With PTK, you can easily create multiple MogDB instances on a single server. Each MogDB instance can be assigned to a different operating system user, allowing you to manage multiple database instances with a single PTK installation.</p><p>To quickly create a test database without any configuration, you can use the <code>ptk demo</code> command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ptk demo</span></span><br><span class="line">Cluster Name: <span class="string">&quot;demo_kVP&quot;</span></span><br><span class="line">+--------------+--------------+------------------------------+-------+---------+---------------------------------+----------+</span><br><span class="line">| az(priority) |      ip      |         user(group)          | port  |  role   |            data <span class="built_in">dir</span>             | upstream |</span><br><span class="line">+--------------+--------------+------------------------------+-------+---------+---------------------------------+----------+</span><br><span class="line">| AZ1(1)       | 172.16.0.164 | demo_user_kVP(demo_user_kVP) | 26000 | primary | /home/demo_user_kVP/demodb/data | -        |</span><br><span class="line">+--------------+--------------+------------------------------+-------+---------+---------------------------------+----------+</span><br><span class="line">✔ Is cluster config correct (default=n) [y/n]: y</span><br><span class="line">INFO[2024-06-06T12:12:05.948] start check hostname ...</span><br><span class="line">INFO[2024-06-06T12:12:05.951] check hostname success</span><br><span class="line">INFO[2024-06-06T12:12:05.951] skip check os</span><br><span class="line">INFO[2024-06-06T12:12:05.951] start check distro ...</span><br><span class="line">INFO[2024-06-06T12:12:05.972] check distro success</span><br><span class="line">[....]</span><br><span class="line">Demo Summary:</span><br><span class="line"></span><br><span class="line">Deploy Status:</span><br><span class="line"></span><br><span class="line">  cluste_name |     host     |     user      | port  |    status     | message</span><br><span class="line">--------------+--------------+---------------+-------+---------------+----------</span><br><span class="line">  demo_kVP    | 172.16.0.164 | demo_user_kVP | 26000 | start_success | success</span><br><span class="line"></span><br><span class="line">Database Detail:</span><br><span class="line"></span><br><span class="line">      item      |              value</span><br><span class="line">----------------+----------------------------------</span><br><span class="line">  user_password | Demo&amp;kVP</span><br><span class="line">  db_password   | Demo&amp;kVP</span><br><span class="line">  base_dir      | /home/demo_user_kVP/demodb</span><br><span class="line">  app_dir       | /home/demo_user_kVP/demodb/app</span><br><span class="line">  data_dir      | /home/demo_user_kVP/demodb/data</span><br><span class="line">  tool_dir      | /home/demo_user_kVP/demodb/tool</span><br><span class="line">  tmp_dir       | /home/demo_user_kVP/demodb/tmp</span><br><span class="line"></span><br><span class="line">Mode Compatibility:</span><br><span class="line"></span><br><span class="line">  mode |        database        |        plugins        |               other</span><br><span class="line">-------+------------------------+-----------------------+-------------------------------------</span><br><span class="line">  PG   | postgres_compatibility | none                  |</span><br><span class="line">  A    | oracle_compatibility   | whale[success]        |</span><br><span class="line">       |                        | compat_tools[success] |</span><br><span class="line">       |                        | mogila[success]       | db user: mogdb, password: Demo&amp;kVP</span><br><span class="line"></span><br><span class="line">Plugin Install Details:</span><br><span class="line">  mode |    plugin    | status  |                 reference                 | error</span><br><span class="line">-------+--------------+---------+-------------------------------------------+--------</span><br><span class="line">  A    | whale        | success | https://docs.mogdb.io/zh/mogdb/v3.0/whale |</span><br><span class="line">       | compat_tools | success | https://gitee.com/enmotech/compat-tools   |</span><br><span class="line">       | mogila       | success | https://gitee.com/enmotech/mogila         |</span><br></pre></td></tr></table></figure><p>The <code>ptk demo</code> command accomplishes the following tasks:</p><ol><li>Creates an operating system user named <code>demo_user_kVP</code>.</li><li>Creates a single-instance MogDB database of the latest version (currently 5.0.7).</li><li>Sets the database to listen on port 26000. Before running the <code>ptk demo</code> command, ensure that port 26000 is not occupied by other applications.</li><li>Create an initial database user with the same name as the OS user: <code>demo_user_kVP</code>. Also, create a monitor user named <code>mogdb</code>. Both users will have their initial passwords specified in the “Database Detail” section.</li><li>Creates two test databases: <code>oracle_compatibility</code> in Oracle-compatible mode and <code>postgres_compatibility</code> in PostgreSQL-compatible mode.</li><li>For the automatically created <code>oracle_compatibility</code> database, the following enhancements are also performed:<ul><li><p>Installs the mogila dataset. For more information about this dataset, refer to: <a href="https://docs.mogdb.io/en/mogdb/v5.0/mogila">Using Sample Dataset Mogila</a></p></li><li><p>Installs the <code>whale</code> plugin, which provides extensive Oracle compatibility features. For more information on the Whale plugin, refer to: <a href="https://docs.mogdb.io/en/mogdb/v5.0/whale">whale</a></p></li><li><p>Installs the <code>compat-tools</code> utility, which supplements the <code>whale</code> plugin with additional Oracle compatibility features that are not yet implemented, such as Oracle-compatible data dictionary views. For more information on <code>compat-tools</code>, refer to: <a href="https://gitee.com/enmotech/compat-tools">enmotech&#x2F;compat-tools</a></p><p><strong>Note:</strong> <code>compat-tools</code> only work within a single database. This means that if you install compat-tools in the <code>oracle_compatibility</code> database (as is done automatically by the <code>ptk demo</code> command), you will only be able to query the corresponding Oracle-compatible data dictionary views when logged into that database. If you want to use these views in another database, you must install compat-tools in that database as well. For example, if you want to query Oracle-compatible data dictionary views in the <code>postgres</code> database, you need to download <code>compat-tools</code> separately from <a href="https://gitee.com/enmotech/compat-tools">enmotech&#x2F;compat-tools</a> then run the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gsql -h 127.0.0.1 -p 26000 -d postgres -f runMe.sql</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="Exploring-Oracle-Compatible-Data-Dictionary-in-MogDB"><a href="#Exploring-Oracle-Compatible-Data-Dictionary-in-MogDB" class="headerlink" title="Exploring Oracle-Compatible Data Dictionary in MogDB"></a>Exploring Oracle-Compatible Data Dictionary in MogDB</h2><p>Switch to the operating system user associated with the demo database. You can log in to the database using the <code>gsql</code> command.</p><p><strong>Note:</strong> If you want to connect to the database remotely, you should use the <code>mogdb</code> user. The <code>ptk demo</code> command creates two users in the database. One starts with <code>demo_user_</code>, which is the initial user. Due to MogDB’s enhanced security features, the initial user is not allowed to connect remotely. The other user is <code>mogdb</code>, which can be used for remote connections. The initial password for the users is displayed at the end of the <code>ptk demo</code> command output. Additionally, you should modify the <code>pg_hba.conf</code> file to allow remote connections. For more information, refer to: <a href="https://docs.mogdb.io/en/mogdb/v5.0/gsql#connecting-to-a-database-remotely">Connecting to a Database Remotely</a>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ptk ls</span></span><br><span class="line">  cluster_name |  <span class="built_in">id</span>  |        addr        |     user      |            data_dir             |          db_version          |     create_time     | comment</span><br><span class="line">---------------+------+--------------------+---------------+---------------------------------+------------------------------+---------------------+----------</span><br><span class="line">  demo_kVP     | 6001 | 172.16.0.164:26000 | demo_user_kVP | /home/demo_user_kVP/demodb/data | MogDB 5.0.7 (build c4707384) | 2024-06-06T12:12:24 |</span><br><span class="line"><span class="comment"># su - demo_user_kVP</span></span><br><span class="line">$ gsql -d oracle_compatibility -r</span><br><span class="line">gsql ((MogDB <span class="number">5.0</span>.<span class="number">7</span> build c4707384) compiled at <span class="number">2024</span>-<span class="number">05</span>-<span class="number">24</span> <span class="number">10</span>:<span class="number">51</span>:<span class="number">53</span> commit <span class="number">0</span> last mr <span class="number">1804</span> )</span><br><span class="line">Non-SSL connection (SSL connection is recommended when requiring high-security)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">oracle_compatibility=# \dt</span><br><span class="line">                             List of relations</span><br><span class="line"> Schema |     Name      | Type  | Owner |             Storage</span><br><span class="line">--------+---------------+-------+-------+----------------------------------</span><br><span class="line"> public | actor         | table | mogdb | &#123;orientation=row,compression=no&#125;</span><br><span class="line"> public | address       | table | mogdb | &#123;orientation=row,compression=no&#125;</span><br><span class="line"> public | category      | table | mogdb | &#123;orientation=row,compression=no&#125;</span><br><span class="line"> public | city          | table | mogdb | &#123;orientation=row,compression=no&#125;</span><br><span class="line"> public | country       | table | mogdb | &#123;orientation=row,compression=no&#125;</span><br><span class="line"> public | customer      | table | mogdb | &#123;orientation=row,compression=no&#125;</span><br><span class="line"> public | film          | table | mogdb | &#123;orientation=row,compression=no&#125;</span><br><span class="line"> public | film_actor    | table | mogdb | &#123;orientation=row,compression=no&#125;</span><br><span class="line"> public | film_category | table | mogdb | &#123;orientation=row,compression=no&#125;</span><br><span class="line"> public | inventory     | table | mogdb | &#123;orientation=row,compression=no&#125;</span><br><span class="line"> public | language      | table | mogdb | &#123;orientation=row,compression=no&#125;</span><br><span class="line"> public | payment       | table | mogdb | &#123;orientation=row,compression=no&#125;</span><br><span class="line"> public | rental        | table | mogdb | &#123;orientation=row,compression=no&#125;</span><br><span class="line"> public | staff         | table | mogdb | &#123;orientation=row,compression=no&#125;</span><br><span class="line"> public | store         | table | mogdb | &#123;orientation=row,compression=no&#125;</span><br><span class="line">(<span class="number">15</span> rows)</span><br></pre></td></tr></table></figure><p>All these tables come from the Mogila test dataset.</p><p>Compat-tools brings a large number of Oracle-compatible data dictionary views (refer to: <a href="https://gitee.com/enmotech/compat-tools#oracle-compatibility-views">Oracle-Compatible Views</a>). Here are some simple examples.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- sysdate function and dual table is supported</span></span><br><span class="line">oracle_compatibility<span class="operator">=</span># <span class="keyword">select</span> sysdate <span class="keyword">from</span> dual;</span><br><span class="line">       sysdate</span><br><span class="line"><span class="comment">---------------------</span></span><br><span class="line"> <span class="number">2024</span><span class="number">-06</span><span class="number">-06</span> <span class="number">12</span>:<span class="number">47</span>:<span class="number">57</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- V$ views are supported</span></span><br><span class="line">oracle_compatibility<span class="operator">=</span># <span class="keyword">select</span> sid,username,status,program <span class="keyword">from</span> v$session;</span><br><span class="line">      sid       <span class="operator">|</span>   username    <span class="operator">|</span> status <span class="operator">|</span>        program</span><br><span class="line"><span class="comment">----------------+---------------+--------+------------------------</span></span><br><span class="line"> <span class="number">47724487509760</span> <span class="operator">|</span> demo_user_kVP <span class="operator">|</span> active <span class="operator">|</span> gsql</span><br><span class="line"> <span class="number">47724085905152</span> <span class="operator">|</span> demo_user_kVP <span class="operator">|</span> idle   <span class="operator">|</span> WLMArbiter</span><br><span class="line"> <span class="number">47724057593600</span> <span class="operator">|</span> demo_user_kVP <span class="operator">|</span> idle   <span class="operator">|</span> WorkloadMonitor</span><br><span class="line"> <span class="number">47724032427776</span> <span class="operator">|</span> demo_user_kVP <span class="operator">|</span> active <span class="operator">|</span> workload</span><br><span class="line"> <span class="number">47723769759488</span> <span class="operator">|</span> demo_user_kVP <span class="operator">|</span> active <span class="operator">|</span> Asp</span><br><span class="line"> <span class="number">47723818518272</span> <span class="operator">|</span> demo_user_kVP <span class="operator">|</span> idle   <span class="operator">|</span> statement flush thread</span><br><span class="line"> <span class="number">47723696359168</span> <span class="operator">|</span> demo_user_kVP <span class="operator">|</span> idle   <span class="operator">|</span> CfsShrinker</span><br><span class="line"> <span class="number">47723730437888</span> <span class="operator">|</span> demo_user_kVP <span class="operator">|</span> idle   <span class="operator">|</span> WDRSnapshot</span><br><span class="line"> <span class="number">47723597268736</span> <span class="operator">|</span> demo_user_kVP <span class="operator">|</span> idle   <span class="operator">|</span> ApplyLauncher</span><br><span class="line"> <span class="number">47723658610432</span> <span class="operator">|</span> demo_user_kVP <span class="operator">|</span> idle   <span class="operator">|</span> TxnSnapCapturer</span><br><span class="line"> <span class="number">47723563190016</span> <span class="operator">|</span> demo_user_kVP <span class="operator">|</span> active <span class="operator">|</span> JobScheduler</span><br><span class="line">(<span class="number">11</span> <span class="keyword">rows</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- DBA_ views are supported</span></span><br><span class="line">oracle_compatibility<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_users;</span><br><span class="line">   username    <span class="operator">|</span> user_id <span class="operator">|</span> password <span class="operator">|</span> account_status <span class="operator">|</span> lock_date <span class="operator">|</span> expiry_date <span class="operator">|</span>   profile</span><br><span class="line"><span class="comment">---------------+---------+----------+----------------+-----------+-------------+--------------</span></span><br><span class="line"> demo_user_kVP <span class="operator">|</span>      <span class="number">10</span> <span class="operator">|</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="operator">|</span> NORMAL         <span class="operator">|</span>           <span class="operator">|</span>             <span class="operator">|</span> DEFAULT_POOL</span><br><span class="line"> MOGDB         <span class="operator">|</span>   <span class="number">18720</span> <span class="operator">|</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="operator">|</span> NORMAL         <span class="operator">|</span>           <span class="operator">|</span>             <span class="operator">|</span> DEFAULT_POOL</span><br><span class="line">(<span class="number">2</span> <span class="keyword">rows</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- USER_ views are supported</span></span><br><span class="line">oracle_compatibility<span class="operator">=</span># <span class="keyword">select</span> table_name,num_rows,last_analyzed <span class="keyword">from</span> user_tables;</span><br><span class="line">  table_name   <span class="operator">|</span> num_rows <span class="operator">|</span>         last_analyzed</span><br><span class="line"><span class="comment">---------------+----------+-------------------------------</span></span><br><span class="line"> COUNTRY       <span class="operator">|</span>        <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"> CITY          <span class="operator">|</span>      <span class="number">600</span> <span class="operator">|</span> <span class="number">2024</span><span class="number">-06</span><span class="number">-06</span> <span class="number">12</span>:<span class="number">13</span>:<span class="number">24.504009</span><span class="operator">+</span><span class="number">08</span></span><br><span class="line"> ACTOR         <span class="operator">|</span>        <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"> FILM_ACTOR    <span class="operator">|</span>     <span class="number">5462</span> <span class="operator">|</span> <span class="number">2024</span><span class="number">-06</span><span class="number">-06</span> <span class="number">12</span>:<span class="number">13</span>:<span class="number">24.518718</span><span class="operator">+</span><span class="number">08</span></span><br><span class="line"> CATEGORY      <span class="operator">|</span>        <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"> FILM_CATEGORY <span class="operator">|</span>     <span class="number">1000</span> <span class="operator">|</span> <span class="number">2024</span><span class="number">-06</span><span class="number">-06</span> <span class="number">12</span>:<span class="number">13</span>:<span class="number">24.531421</span><span class="operator">+</span><span class="number">08</span></span><br><span class="line"> <span class="keyword">LANGUAGE</span>      <span class="operator">|</span>        <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"> FILM          <span class="operator">|</span>     <span class="number">1000</span> <span class="operator">|</span> <span class="number">2024</span><span class="number">-06</span><span class="number">-06</span> <span class="number">12</span>:<span class="number">13</span>:<span class="number">24.56158</span><span class="operator">+</span><span class="number">08</span></span><br><span class="line"> PAYMENT       <span class="operator">|</span>        <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"> CUSTOMER      <span class="operator">|</span>        <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"> INVENTORY     <span class="operator">|</span>        <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"> RENTAL        <span class="operator">|</span>        <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"> STAFF         <span class="operator">|</span>        <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"> ADDRESS       <span class="operator">|</span>        <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"> STORE         <span class="operator">|</span>        <span class="number">0</span> <span class="operator">|</span></span><br><span class="line">(<span class="number">15</span> <span class="keyword">rows</span>)</span><br><span class="line"></span><br><span class="line">oracle_compatibility<span class="operator">=</span># <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> CITY;</span><br><span class="line"> count</span><br><span class="line"><span class="comment">-------</span></span><br><span class="line">   <span class="number">600</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- some short name views are supported, like IND, OBJ, COLS </span></span><br><span class="line">oracle_compatibility<span class="operator">=</span># <span class="keyword">select</span> index_name,table_owner,uniqueness,distinct_keys,partitioned <span class="keyword">from</span> ind <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;CITY&#x27;</span>;</span><br><span class="line">    index_name     <span class="operator">|</span> table_owner <span class="operator">|</span> uniqueness <span class="operator">|</span> distinct_keys <span class="operator">|</span> partitioned</span><br><span class="line"><span class="comment">-------------------+-------------+------------+---------------+-------------</span></span><br><span class="line"> CITY_PKEY         <span class="operator">|</span> PUBLIC      <span class="operator">|</span> <span class="keyword">UNIQUE</span>     <span class="operator">|</span>           <span class="number">600</span> <span class="operator">|</span> <span class="keyword">NO</span></span><br><span class="line"> IDX_FK_COUNTRY_ID <span class="operator">|</span> PUBLIC      <span class="operator">|</span> NONUNIQUE  <span class="operator">|</span>           <span class="number">109</span> <span class="operator">|</span> <span class="keyword">NO</span></span><br><span class="line">(<span class="number">2</span> <span class="keyword">rows</span>)</span><br></pre></td></tr></table></figure><p><strong>Note:</strong> Due to significant differences in the underlying structure between MogDB and Oracle, these Oracle-compatible views may not include all the fields present in the corresponding Oracle database views.</p><p><strong>To be continued:</strong></p><p>- Exploring Oracle Compatibility in MogDB (Series II) - System Functions</p><p>- Exploring Oracle Compatibility in MogDB (Series III) - DBMS Packages</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Install-PTK&quot;&gt;&lt;a href=&quot;#Install-PTK&quot; class=&quot;headerlink&quot; title=&quot;Install PTK&quot;&gt;&lt;/a&gt;Install PTK&lt;/h2&gt;&lt;p&gt;PTK is the optimal tool for</summary>
        
      
    
    
    
    
    <category term="MogDB" scheme="http://kamusis.github.io/tags/MogDB/"/>
    
    <category term="Oracle-Compatibility" scheme="http://kamusis.github.io/tags/Oracle-Compatibility/"/>
    
  </entry>
  
  <entry>
    <title>Working Mechanism of synchronous_standby_names in MogDB</title>
    <link href="http://kamusis.github.io/2024/06/05/Working-Mechanism-of-synchronous-standby-names-in-MogDB/"/>
    <id>http://kamusis.github.io/2024/06/05/Working-Mechanism-of-synchronous-standby-names-in-MogDB/</id>
    <published>2024-06-05T02:05:50.000Z</published>
    <updated>2024-06-05T02:09:43.089Z</updated>
    
    <content type="html"><![CDATA[<p>In MogDB, the parameter <code>synchronous_standby_names</code> is used to configure synchronous replication settings. When this parameter is set to <code>&#39;*&#39;</code>（default setting）, it indicates that any available standby server can be used as a synchronous standby. This configuration allows any currently connected standby to be utilized as a synchronous standby without explicitly specifying the standby’s name.</p><h3 id="Working-Mechanism"><a href="#Working-Mechanism" class="headerlink" title="Working Mechanism"></a>Working Mechanism</h3><p>When <code>synchronous_standby_names</code> is set to <code>&#39;*&#39;</code>, MogDB’s synchronous replication mechanism selects the synchronous standby through the following steps:</p><ol><li><p><strong>Initial Connection</strong>: When the primary server starts or the parameter is changed, the primary server accepts all connected standby servers.</p></li><li><p><strong>Synchronous Standby Confirmation</strong>:</p><ul><li>The primary server sends a synchronization request to all connected standby servers.</li><li>Each standby server, upon receiving the request, confirms it and reports its status back to the primary server.</li></ul></li><li><p><strong>Selecting the Synchronous Standby</strong>:</p><ul><li>The primary server selects the earliest responding standby server(s) as the synchronous standby.</li><li>This selection process is dynamic, meaning that if new standbys connect or current synchronous standbys disconnect, the primary server will reselect the synchronous standby.</li></ul></li></ol><h3 id="Priority-and-Behavior"><a href="#Priority-and-Behavior" class="headerlink" title="Priority and Behavior"></a>Priority and Behavior</h3><ul><li><strong>No Priority Order</strong>: Since <code>&#39;*&#39;</code> denotes any standby, all standbys have the same priority. The primary server simply selects the earliest responding standby as the synchronous standby.</li><li><strong>Dynamic Adjustment</strong>: If a synchronous standby disconnects, the primary server automatically selects the next responding standby as the new synchronous standby, ensuring the continuity and reliability of synchronous replication.</li><li><strong>Concurrent Management</strong>: If multiple standbys connect simultaneously, the primary server can handle these concurrent connections and select the synchronous standby based on the confirmation of synchronization requests.</li></ul><h3 id="Configuration-Example-and-Usage"><a href="#Configuration-Example-and-Usage" class="headerlink" title="Configuration Example and Usage"></a>Configuration Example and Usage</h3><p>Suppose we have one primary server and three standby servers (<code>standby1</code>, <code>standby2</code>, and <code>standby3</code>). In the configuration file <code>postgresql.conf</code>, set <code>synchronous_standby_names</code> to <code>&#39;*&#39;</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">synchronous_standby_names = &#x27;*&#x27;</span><br></pre></td></tr></table></figure><h4 id="Scenario-Analysis"><a href="#Scenario-Analysis" class="headerlink" title="Scenario Analysis"></a>Scenario Analysis</h4><ol><li><p><strong>Selection at Startup</strong>:</p><ul><li>When the primary server starts, all connected standby servers send heartbeat signals and wait for the primary server’s synchronization request.</li><li>The primary server selects the earliest responding standby as the synchronous standby.</li></ul></li><li><p><strong>Runtime Changes</strong>:</p><ul><li>If the current synchronous standby <code>standby1</code> disconnects, the primary server automatically selects the next responding standby <code>standby2</code> as the new synchronous standby.</li><li>If a new standby <code>standby3</code> connects to the primary server and there is no current synchronous standby, the primary server selects <code>standby3</code> as the synchronous standby.</li></ul></li></ol><h4 id="Dynamic-Adjustment"><a href="#Dynamic-Adjustment" class="headerlink" title="Dynamic Adjustment"></a>Dynamic Adjustment</h4><p>If we start the primary server and three standby servers, setting <code>synchronous_standby_names = &#39;*&#39;</code>, the following state transitions are possible:</p><ul><li><strong>Initial State</strong>: All standbys (<code>standby1</code>, <code>standby2</code>, and <code>standby3</code>) connect, and the primary server selects the earliest responding standby <code>standby1</code> as the synchronous standby.</li><li><strong><code>standby1</code> Disconnects</strong>: The primary server automatically selects the next responding standby <code>standby2</code> as the new synchronous standby.</li><li><strong>New Standby Connection</strong>: A new standby <code>standby4</code> connects; the primary server will not change the current synchronous standby unless <code>standby2</code> disconnects.</li></ul><h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><p>When <code>synchronous_standby_names</code> is set to <code>&#39;*&#39;</code>, MogDB dynamically selects any currently available standby as the synchronous standby. This provides a flexible and highly available synchronous replication mechanism without requiring administrators to manually specify the standby names. The selection process is based on standby response times and automatically adjusts during runtime to ensure the continuity and reliability of synchronous replication.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;In MogDB, the parameter &lt;code&gt;synchronous_standby_names&lt;/code&gt; is used to configure synchronous replication settings. When this</summary>
        
      
    
    
    
    
    <category term="MogDB" scheme="http://kamusis.github.io/tags/MogDB/"/>
    
  </entry>
  
  <entry>
    <title>MTK: The Ultimate Tool for Seamlessly Migrating Oracle Databases to MogDB</title>
    <link href="http://kamusis.github.io/2024/06/03/MTK-The-Ultimate-Tool-for-Seamlessly-Migrating-Oracle-Databases-to-MogDB/"/>
    <id>http://kamusis.github.io/2024/06/03/MTK-The-Ultimate-Tool-for-Seamlessly-Migrating-Oracle-Databases-to-MogDB/</id>
    <published>2024-06-03T03:57:19.000Z</published>
    <updated>2024-06-03T03:58:00.096Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Get-the-latest-version-MTK"><a href="#Get-the-latest-version-MTK" class="headerlink" title="Get the latest version MTK."></a>Get the latest version MTK.</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://cdn-mogdb.enmotech.com/mtk/v2.6.3/mtk_2.6.3_linux_amd64.tar.gz</span><br><span class="line">tar -xvf mtk_2.6.3_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><h2 id="Generate-MTK-trial-license-online"><a href="#Generate-MTK-trial-license-online" class="headerlink" title="Generate MTK trial license online"></a>Generate MTK trial license online</h2><p>The trial license is valid for 1 month, and each email address can generate only one license. However, email addresses with the “enmotech.com” domain can generate licenses repeatedly. If clients wish to extend their trial of MTK beyond the initial month, they should contact Enmotech’s sales or pre-sales team to request an additional 1-month license.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[kamus@altlinux10 mtk_2.6.3_linux_amd64]$ ./mtk license gen</span><br><span class="line">License File Not Found (default license.json)</span><br><span class="line">The License code is invalid, start applying</span><br><span class="line">✔ Email: kamus@enmotech.com█</span><br><span class="line">Start applying for email kamus@enmotech.com authorization.</span><br><span class="line">Start parsing the interface to return data.</span><br><span class="line">Successful application for authorization. Please check the mail and save it as license.json.</span><br></pre></td></tr></table></figure><p>Upon receiving the email, upload the attached license.json file to the MTK directory. Then, use the command mtk -v to verify the license validation.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[kamus@altlinux10 mtk_2.6.3_linux_amd64]$ ./mtk -v</span><br><span class="line">Using license file: /home/kamus/mogdb-tools/mtk_2.6.3_linux_amd64/license.json</span><br><span class="line">Name: kamus@enmotech.com</span><br><span class="line">Expiry: 2022-10-24 12:08:58.751194162 +0800 +0800</span><br><span class="line">License key verified!</span><br><span class="line">License checks OK!</span><br><span class="line"></span><br><span class="line">MMMMMMMM               MMMMMMMMTTTTTTTTTTTTTTTTTTTTTTTKKKKKKKKK    KKKKKKK</span><br><span class="line">M:::::::M             M:::::::MT:::::::::::::::::::::TK:::::::K    K:::::K</span><br><span class="line">M::::::::M           M::::::::MT:::::::::::::::::::::TK:::::::K    K:::::K</span><br><span class="line">M:::::::::M         M:::::::::MT:::::TT:::::::TT:::::TK:::::::K   K::::::K</span><br><span class="line">M::::::::::M       M::::::::::MTTTTTT  T:::::T  TTTTTTKK::::::K  K:::::KKK</span><br><span class="line">M:::::::::::M     M:::::::::::M        T:::::T          K:::::K K:::::K</span><br><span class="line">M:::::::M::::M   M::::M:::::::M        T:::::T          K::::::K:::::K</span><br><span class="line">M::::::M M::::M M::::M M::::::M        T:::::T          K:::::::::::K</span><br><span class="line">M::::::M  M::::M::::M  M::::::M        T:::::T          K:::::::::::K</span><br><span class="line">M::::::M   M:::::::M   M::::::M        T:::::T          K::::::K:::::K</span><br><span class="line">M::::::M    M:::::M    M::::::M        T:::::T          K:::::K K:::::K</span><br><span class="line">M::::::M     MMMMM     M::::::M        T:::::T        KK::::::K  K:::::KKK</span><br><span class="line">M::::::M               M::::::M      TT:::::::TT      K:::::::K   K::::::K</span><br><span class="line">M::::::M               M::::::M      T:::::::::T      K:::::::K    K:::::K</span><br><span class="line">M::::::M               M::::::M      T:::::::::T      K:::::::K    K:::::K</span><br><span class="line">MMMMMMMM               MMMMMMMM      TTTTTTTTTTT      KKKKKKKKK    KKKKKKK</span><br><span class="line"></span><br><span class="line">Release version: v2.6.3</span><br><span class="line">Git Commit hash: da0ed8ee</span><br><span class="line">Git Commit Date: 2022-09-22T01:17:49Z</span><br><span class="line">Git Tag        : v2.6.3</span><br><span class="line">Build timestamp: 20220922011907</span><br></pre></td></tr></table></figure><h2 id="Install-Oracle-instant-client"><a href="#Install-Oracle-instant-client" class="headerlink" title="Install Oracle instant client"></a>Install Oracle instant client</h2><p>MTK requires the <a href="https://www.oracle.com/database/technologies/instant-client/downloads.html">Oracle Instant Client</a> to migrate Oracle objects to MogDB. In this tutorial, we will download the <a href="https://download.oracle.com/otn_software/linux/instantclient/217000/instantclient-basic-linux.x64-21.7.0.0.0dbru.zip">Oracle Instant Client for Linux x86-64 Basic Package</a>. After downloading, unzip the file and set the <code>LD_LIBRARY_PATH</code> parameter as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/home/kamus/instantclient_21_7:<span class="variable">$LD_LIBRARY_PATH</span></span><br></pre></td></tr></table></figure><p>In this tutorial, we will migrate a sample schema “customer_orders” to MogDB. The scripts for Oracle can be downloaded from the <a href="https://github.com/oracle-samples/db-sample-schemas">db-sample-schemas</a> repository on GitHub.</p><p><img src="https://s2.loli.net/2022/09/24/mKnfuY28shRNI9X.png" alt="image-20220924140451621"></p><h2 id="Initialize-migration-project"><a href="#Initialize-migration-project" class="headerlink" title="Initialize migration project"></a>Initialize migration project</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mtk init-project -s oracle -t mogdb -n ora2mogdb</span><br></pre></td></tr></table></figure><h2 id="Modify-MTK-configuration-file"><a href="#Modify-MTK-configuration-file" class="headerlink" title="Modify MTK configuration file"></a>Modify MTK configuration file</h2><p>Modify the example MTK configuration file stored in the <code>project_name_dir/config</code> directory. Refer to the <a href="https://docs.mogdb.io/en/mtk/v2.0/mtk-parameter">MTK documentation</a> for detailed information on each parameter. The essential configuration sections for MTK are <code>source</code>, <code>target</code>, and <code>object</code>.</p><ul><li><p><strong><code>source</code> section</strong>: This defines the connection to the source database. MTK needs to query the Oracle database dictionary to retrieve DDL. Therefore, it is typically recommended to use a DBA user, with the default system user being sufficient.</p></li><li><p><strong><code>target</code> section</strong>: This defines the connection to the target database.</p></li><li><p><strong><code>object</code> section</strong>: To migrate all objects within a schema, simply specify the schema name in the <code>schemas</code> section.</p></li></ul><p>The <code>mtk.json</code> configuration file should look like this:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;oracle&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;connect&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;119.3.182.31&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="string">&quot;system&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">15221</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;oracle&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dbName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ORACLE21C&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;charset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;clientCharset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mogdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;connect&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;127.0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="string">&quot;co&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">26000</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Enmo@123&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dbName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;postgres&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;charset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;clientCharset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;tables&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;schemas&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;co&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;excludeTable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tableSplit&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dataOnly&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;schemaOnly&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>For this tutorial, we plan to migrate all objects in the “CO” schema from the Oracle database to the same user in MogDB. For testing purposes, we will not create a new database in MogDB. Instead, we will create a new user “co” in the default database, <code>postgres</code>.</p><p>Run the following command to create the user:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[omm@altlinux10 ~]$ gsql -d postgres -p 26000 -r</span><br><span class="line">gsql ((MogDB <span class="number">3.0</span>.<span class="number">2</span> build <span class="number">9</span>bc79be5) compiled at <span class="number">2022</span>-<span class="number">09</span>-<span class="number">18</span> <span class="number">00</span>:<span class="number">37</span>:<span class="number">49</span> commit <span class="number">0</span> last mr  )</span><br><span class="line">Non-SSL connection (SSL connection is recommended when requiring high-security)</span><br><span class="line">Type &quot;help&quot; for help.</span><br><span class="line"></span><br><span class="line">MogDB=# create user co identified by &quot;Enmo@<span class="number">123</span>&quot;;</span><br><span class="line">CREATE ROLE</span><br></pre></td></tr></table></figure><h2 id="Start-migration"><a href="#Start-migration" class="headerlink" title="Start migration"></a>Start migration</h2><p>Now, we can start migration.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mtk -c ora2mogdb/config/mtk.json</span><br></pre></td></tr></table></figure><h2 id="Check-migration-report"><a href="#Check-migration-report" class="headerlink" title="Check migration report"></a>Check migration report</h2><p>The migration result report will be generated in the project report directory, available in both plain text and HTML formats. For simplicity, I have included the text format result in this tutorial.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">-----------------------</span><br><span class="line">ObjectName Type Summary</span><br><span class="line">-----------------------</span><br><span class="line"></span><br><span class="line">+------------------+-------------------+-------------------+--------+-----------+-------------+-------------+-------------+--------------------|-------------+</span><br><span class="line">|       Type       |     StartTime     |      EndTime      | Status | Total Num | Success Num | Warring Num | Failed  Num |Failed(Invalid) Num | Time        |</span><br><span class="line">+------------------+-------------------+-------------------+--------+-----------+-------------+-------------+-------------+--------------------|-------------+</span><br><span class="line">|Schema            |2022-09-24 15:12:36|2022-09-24 15:12:36|finish  |1          |1            |0            |0            |0                   |282 ms       ｜</span><br><span class="line">|Sequence          |2022-09-24 15:12:36|2022-09-24 15:12:36|finish  |0          |0            |0            |0            |0                   |210 ms       ｜</span><br><span class="line">|ObjectType        |2022-09-24 15:12:36|2022-09-24 15:12:36|finish  |0          |0            |0            |0            |0                   |356 ms       ｜</span><br><span class="line">|Queue             |2022-09-24 15:12:36|2022-09-24 15:12:37|finish  |0          |0            |0            |0            |0                   |177 ms       ｜</span><br><span class="line">|Table             |2022-09-24 15:12:37|2022-09-24 15:12:47|finish  |7          |7            |0            |0            |0                   |9 s 952 ms   ｜</span><br><span class="line">|TableData         |2022-09-24 15:12:47|2022-09-24 15:12:53|finish  |7          |7            |0            |0            |0                   |6 s 743 ms   ｜</span><br><span class="line">|Index             |2022-09-24 15:12:53|2022-09-24 15:12:53|finish  |7          |7            |0            |0            |0                   |1 ms         ｜</span><br><span class="line">|Constraint        |2022-09-24 15:12:53|2022-09-24 15:12:53|finish  |24         |23           |0            |1            |0                   |51 ms        ｜</span><br><span class="line">|DBLink            |2022-09-24 15:12:53|2022-09-24 15:12:53|finish  |0          |0            |0            |0            |0                   |67 ms        ｜</span><br><span class="line">|View              |2022-09-24 15:12:53|2022-09-24 15:12:54|finish  |4          |2            |0            |2            |0                   |723 ms       ｜</span><br><span class="line">|MaterializedView  |2022-09-24 15:12:54|2022-09-24 15:12:54|finish  |0          |0            |0            |0            |0                   |138 ms       ｜</span><br><span class="line">|Function          |2022-09-24 15:12:54|2022-09-24 15:12:54|finish  |0          |0            |0            |0            |0                   |113 ms       ｜</span><br><span class="line">|Procedure         |2022-09-24 15:12:54|2022-09-24 15:12:55|finish  |0          |0            |0            |0            |0                   |109 ms       ｜</span><br><span class="line">|Package           |2022-09-24 15:12:55|2022-09-24 15:12:55|finish  |0          |0            |0            |0            |0                   |77 ms        ｜</span><br><span class="line">|Trigger           |2022-09-24 15:12:55|2022-09-24 15:12:55|finish  |0          |0            |0            |0            |0                   |404 ms       ｜</span><br><span class="line">|Synonym           |2022-09-24 15:12:55|2022-09-24 15:12:55|finish  |0          |0            |0            |0            |0                   |74 ms        ｜</span><br><span class="line">|TableDataCom      |2022-09-24 15:12:55|2022-09-24 15:12:56|finish  |7          |7            |0            |0            |0                   |810 ms       ｜</span><br><span class="line">|AlterSequence     |2022-09-24 15:12:56|2022-09-24 15:12:56|finish  |0          |0            |0            |0            |0                   |71 ms        ｜</span><br><span class="line">|CollStatistics    |2022-09-24 15:12:56|2022-09-24 15:12:56|finish  |7          |7            |0            |0            |0                   |29 ms        ｜</span><br><span class="line">+------------------+-------------------+-------------------+--------+-----------+-------------+-------------+-------------+--------------------|-------------+</span><br></pre></td></tr></table></figure><p>We can see that all tables and table data have been successfully migrated to MogDB without any errors. However, there is one failed constraint and two failed views.</p><p>The failed constraint is a JSON check constraint, which is not supported by MogDB.</p><p><img src="https://s2.loli.net/2022/09/24/RDKmsNFvroWTPgZ.png" alt="image-20220924153609138"></p><p>The failed views are due to the <code>grouping_id</code> function and the <code>json_table</code> function, which are not yet implemented in MogDB ().</p><table><thead><tr><th>SQL</th><th>ERROR</th></tr></thead><tbody><tr><td><img src="https://s2.loli.net/2022/09/24/4BMfnQ6alrqhvd8.png" alt="image-20220924154621375"></td><td>pq: function grouping_id(character varying, character varying) does not exist</td></tr><tr><td><img src="https://s2.loli.net/2022/09/24/D6kHROy3vFULnQA.png" alt="image-20220924154529308"></td><td>pq: syntax error at or near “columns”</td></tr></tbody></table><h2 id="Check-migration-result"><a href="#Check-migration-result" class="headerlink" title="Check migration result"></a>Check migration result</h2><p>Run the sample queries to ensure that all the data has been migrated to MogDB without any errors.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/* 5 products with the highest revenue</span><br><span class="line">   With their corresponding order rank */</span><br><span class="line">select p.product_name, </span><br><span class="line">       count(*) number_of_orders,</span><br><span class="line">       sum ( oi.quantity * oi.unit_price ) total_value,</span><br><span class="line">       rank () over ( </span><br><span class="line">         order by count(*) desc </span><br><span class="line">       ) order_count_rank</span><br><span class="line">from   products p</span><br><span class="line">join   order_items oi</span><br><span class="line">on     p.product_id = oi.product_id</span><br><span class="line">group  by p.product_name</span><br><span class="line">order  by sum ( oi.quantity * oi.unit_price ) desc</span><br><span class="line">fetch  first 5 rows only;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">MogDB=&gt; select p.product_name,</span><br><span class="line">MogDB-&gt;        count(*) number_of_orders,</span><br><span class="line">MogDB-&gt;        sum ( oi.quantity * oi.unit_price ) total_value,</span><br><span class="line">MogDB-&gt;        rank () over (</span><br><span class="line">MogDB(&gt;          order by sum ( oi.quantity * oi.unit_price ) desc</span><br><span class="line">MogDB(&gt;        ) revenue_rank</span><br><span class="line">MogDB-&gt; from   products p</span><br><span class="line">MogDB-&gt; join   order_items oi</span><br><span class="line">MogDB-&gt; on     p.product_id = oi.product_id</span><br><span class="line">MogDB-&gt; group  by p.product_name</span><br><span class="line">MogDB-&gt; order  by count(*) desc</span><br><span class="line">MogDB-&gt; fetch  first 5 rows only;</span><br><span class="line">     product_name      | number_of_orders | total_value | revenue_rank</span><br><span class="line">-----------------------+------------------+-------------+--------------</span><br><span class="line"> Girl&#x27;s Trousers (Red) |              148 |    15794.76 |            1</span><br><span class="line"> Boy&#x27;s Hoodie (Grey)   |              100 |     3754.08 |           35</span><br><span class="line"> Men&#x27;s Pyjamas (Blue)  |              100 |     3274.61 |           36</span><br><span class="line"> Men&#x27;s Coat (Red)      |               98 |     4230.30 |           31</span><br><span class="line"> Boy&#x27;s Socks (White)   |               98 |     3081.12 |           38</span><br><span class="line">(5 rows)</span><br></pre></td></tr></table></figure><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Migrating tables, table data, and indexes from Oracle to MogDB typically proceeds without issues. However, for views, procedures, functions, and packages, some modifications to the source code may be necessary. With the ongoing development of Oracle compatibility in MogDB, we believe that the need for such modifications will decrease over time, making the migration process from Oracle to MogDB even smoother.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Get-the-latest-version-MTK&quot;&gt;&lt;a href=&quot;#Get-the-latest-version-MTK&quot; class=&quot;headerlink&quot; title=&quot;Get the latest version MTK.&quot;&gt;&lt;/a&gt;Get</summary>
        
      
    
    
    
    
    <category term="MogDB" scheme="http://kamusis.github.io/tags/MogDB/"/>
    
    <category term="Oracle" scheme="http://kamusis.github.io/tags/Oracle/"/>
    
    <category term="Database Migration" scheme="http://kamusis.github.io/tags/Database-Migration/"/>
    
  </entry>
  
  <entry>
    <title>Ensuring Data Integrity: How Major Databases Handle Partial Writes and Atomic Operations</title>
    <link href="http://kamusis.github.io/2024/05/30/Ensuring-Data-Integrity-How-Major-Databases-Handle-Partial-Writes-and-Atomic-Operations/"/>
    <id>http://kamusis.github.io/2024/05/30/Ensuring-Data-Integrity-How-Major-Databases-Handle-Partial-Writes-and-Atomic-Operations/</id>
    <published>2024-05-30T10:22:37.000Z</published>
    <updated>2024-05-31T16:21:32.132Z</updated>
    
    <content type="html"><![CDATA[<p>In the world of databases, ensuring atomicity in write operations is crucial. This post explores the importance of atomic writes and how various databases handle potential issues like partial writes.</p><h4 id="Understanding-Partial-Writes"><a href="#Understanding-Partial-Writes" class="headerlink" title="Understanding Partial Writes"></a>Understanding Partial Writes</h4><p>In the I&#x2F;O write chain, the size of atomic operations can vary. An operation at a higher level may be split into multiple operations at a lower level, leading to scenarios where some operations succeed while others fail. This phenomenon is known as a partial write.</p><ul><li><strong>Legacy Disk Drives</strong>: Default sector size is 512 bytes.</li><li><strong>Modern Disk Drives</strong>: Advanced format sector size is 4k.</li><li><strong>Filesystem Page Size</strong>: For example, ext4 has a default page size of 4k.</li><li><strong>Database Page Sizes</strong>:<ul><li>Oracle: 8K</li><li>MySQL: 16K</li><li>PostgreSQL: 8K</li><li>openGauss: 8K</li></ul></li></ul><h3 id="The-Reality-of-Partial-Writes"><a href="#The-Reality-of-Partial-Writes" class="headerlink" title="The Reality of Partial Writes"></a>The Reality of Partial Writes</h3><p>While theoretically, databases must handle partial writes, in practice, such events are quite rare. The critical aspect is not just preventing partial writes but ensuring robust mechanisms for data integrity checks (checksums) and recovery when issues do arise.</p><h3 id="How-Oracle-Handles-Partial-Writes"><a href="#How-Oracle-Handles-Partial-Writes" class="headerlink" title="How Oracle Handles Partial Writes"></a>How Oracle Handles Partial Writes</h3><p>Oracle’s approach to partial writes is pragmatic:</p><ol><li><strong>Automatic Repair</strong>: If a fractured block is detected, Oracle tries to repair it using the corresponding block from Active Data Guard (ADG) or the flashback log.</li><li><strong>Error Reporting</strong>: If automatic repair fails, an ORA-01578 error is logged, prompting the DBA to perform a media recovery.</li><li><strong>Block-Level Recovery</strong>: Oracle supports block-level recovery, making the process less cumbersome and time-consuming.</li></ol><p>Oracle’s backup sets are designed to handle partial writes:</p><ul><li><strong>Using OS Commands</strong>: When backing up data files using OS commands, Oracle requires the tablespace to be in backup mode. Any changes to data blocks are logged in the redo log, ensuring a clean block can be restored during recovery.</li><li><strong>Using RMAN</strong>: RMAN handles partial writes by ensuring that each backup block is clean, eliminating the need to worry about fractured blocks.</li><li><strong>Block Checking</strong>: Oracle provides mechanisms like DB_BLOCK_CHECKING for comprehensive checksums.</li></ul><h3 id="How-MySQL-Handles-Partial-Writes"><a href="#How-MySQL-Handles-Partial-Writes" class="headerlink" title="How MySQL Handles Partial Writes"></a>How MySQL Handles Partial Writes</h3><p>MySQL employs a <strong>double write buffer</strong> to safeguard against partial writes. </p><ol><li><strong>Double Write Buffer</strong>: Despite its name, the double write buffer is not stored in memory; instead, it consists of persistent files on disk. The mechanism works as follows: before writing a data block to its final location on disk, MySQL first writes it to the double write buffer.</li><li><strong>Data Integrity</strong>: This approach ensures that there is always a clean copy of the block available—either in the double write buffer or in the data files—allowing for safe redo operations.</li></ol><p>However, this method is not without its challenges. One of the primary concerns is its efficiency, as it effectively doubles the I&#x2F;O workload for redo logging. This has sparked ongoing discussions about the trade-offs and effectiveness of using a double write buffer to address partial writes.</p><h3 id="How-PostgreSQL-Handles-Partial-Writes"><a href="#How-PostgreSQL-Handles-Partial-Writes" class="headerlink" title="How PostgreSQL Handles Partial Writes"></a>How PostgreSQL Handles Partial Writes</h3><p>PostgreSQL employs <strong>full page writes</strong> to manage partial writes effectively:</p><ol><li><strong>Full Page Writes</strong>: When a data block is updated for the first time after a checkpoint, the entire block is written to the WAL (Write-Ahead Logging) log. This is akin to the database always being in “Backup status,” similar to issuing the <code>alter tablespace x begin backup</code> command in an Oracle database.</li><li><strong>Data Integrity</strong>: This mechanism ensures that even if a partial write occurs, the database remains consistent because the original page can be used for redo operations.</li></ol><p>There has been community discussion about adopting a double write buffer mechanism, but it remains an area of interest rather than active development. For more details, you can check out these discussions:</p><ul><li><a href="https://www.postgresql.org/message-id/1962493974.656458.1327703514780.JavaMail.root@zimbra-prod-mbox-4.vmware.com">Discussion on Double Write Buffer Mechanism (Post 1)</a></li><li><a href="https://www.postgresql.org/message-id/20180418062240.GJ18178%40paquier.xyz">Discussion on Double Write Buffer Mechanism (Post 2)</a></li></ul><h3 id="How-MogDB-Handles-Partial-Writes"><a href="#How-MogDB-Handles-Partial-Writes" class="headerlink" title="How MogDB Handles Partial Writes"></a>How MogDB Handles Partial Writes</h3><p>MogDB (the enterprise edition of openGauss) combines strategies from MySQL and PostgreSQL:</p><ol><li><strong>Double Write Buffer</strong>: Similar to MySQL, MogDB uses a double write buffer by setting <code>enable_double_write=on</code>.</li><li><strong>Full Page Writes</strong>: MogDB retains PostgreSQL’s full page write mechanism by setting <code>full_page_writes=on</code>.</li></ol><p>Depending on the configuration of incremental checkpoints (enable_incremental_checkpoint):</p><ul><li><strong>Incremental Checkpoints Off</strong>:<ul><li>With <code>full_page_writes=on</code>, full page writes are used.</li><li>With <code>full_page_writes=off</code>, partial writes are not a concern.</li></ul></li><li><strong>Incremental Checkpoints On</strong>:<ul><li>With <code>enable_double_write=on</code>, double writes are used.</li><li>With <code>enable_double_write=off</code>, the behavior depends on full_page_writes settings.</li></ul></li></ul><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>Ensuring atomic writes in databases is essential for data integrity and consistency. While partial writes are rare, robust mechanisms for detection and recovery are vital. Oracle, MySQL, PostgreSQL, and MogDB&#x2F;openGauss each have unique approaches to handling these scenarios, ensuring that data remains reliable and recoverable.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;In the world of databases, ensuring atomicity in write operations is crucial. This post explores the importance of atomic writes and how</summary>
        
      
    
    
    
    
    <category term="MogDB" scheme="http://kamusis.github.io/tags/MogDB/"/>
    
    <category term="openGauss" scheme="http://kamusis.github.io/tags/openGauss/"/>
    
    <category term="Oracle" scheme="http://kamusis.github.io/tags/Oracle/"/>
    
    <category term="PostgreSQL" scheme="http://kamusis.github.io/tags/PostgreSQL/"/>
    
    <category term="MySQL" scheme="http://kamusis.github.io/tags/MySQL/"/>
    
    <category term="Partial Writes" scheme="http://kamusis.github.io/tags/Partial-Writes/"/>
    
  </entry>
  
  <entry>
    <title>How to build blog site by using Hexo in Windows WSL and deploy to GitHub Pages</title>
    <link href="http://kamusis.github.io/2024/05/27/How-to-build-blog-site-by-using-Hexo-in-Windows-WSL-and-deploy-to-GitHub-Pages/"/>
    <id>http://kamusis.github.io/2024/05/27/How-to-build-blog-site-by-using-Hexo-in-Windows-WSL-and-deploy-to-GitHub-Pages/</id>
    <published>2024-05-27T07:10:17.000Z</published>
    <updated>2024-05-27T09:50:19.586Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Why-use-WSL"><a href="#Why-use-WSL" class="headerlink" title="Why use WSL"></a>Why use WSL</h2><p>Using Windows Subsystem for Linux (WSL) instead of relying solely on Windows can offer several advantages, particularly for developers and IT professionals. WSL allows users to run a GNU&#x2F;Linux environment directly on Windows, without the overhead of a traditional virtual machine or dual-boot setup. This enables seamless access to a wide range of Linux tools and utilities, which are often preferred for development tasks, scripting, and system administration. Additionally, WSL provides a more consistent and familiar environment for those accustomed to Unix-based systems, facilitating smoother workflows and integration with cloud-based services. By leveraging WSL, professionals can enjoy the best of both worlds: the robust software ecosystem of Windows and the powerful command-line capabilities of Linux.</p><h2 id="Why-use-Hexo"><a href="#Why-use-Hexo" class="headerlink" title="Why use Hexo"></a>Why use Hexo</h2><p>Hexo offers several advantages over WordPress, particularly for developers and tech-savvy users. As a static site generator, Hexo provides faster load times and improved security since it does not rely on a database or server-side processing, which are common vulnerabilities in WordPress. Additionally, Hexo allows for greater customization through its use of Markdown and extensive plugin ecosystem, enabling users to tailor their sites to specific needs without the overhead of a complex content management system. Furthermore, Hexo’s deployment process is streamlined, often integrating seamlessly with version control systems like Git, making it an excellent choice for those who prioritize efficiency and performance in their web development projects.</p><h2 id="Why-use-Github-Pages"><a href="#Why-use-Github-Pages" class="headerlink" title="Why use Github Pages"></a>Why use Github Pages</h2><p>Using GitHub Pages instead of a traditional hosting server offers several distinct advantages. Firstly, GitHub Pages provides a seamless integration with GitHub repositories, enabling automatic deployment of websites directly from your codebase. This integration ensures that updates and changes to your site are effortlessly managed through version control, promoting a streamlined workflow. Additionally, GitHub Pages is cost-effective, offering free hosting with custom domain support, which can significantly reduce overhead costs for personal projects or small businesses. The platform also boasts robust security features, leveraging GitHub’s infrastructure to protect your site from common vulnerabilities. Furthermore, the simplicity and ease of use make GitHub Pages an attractive option for developers who want to focus on writing code rather than managing server configurations and maintenance. Overall, GitHub Pages combines efficiency, cost savings, and security, making it an excellent choice for hosting static websites and project documentation.</p><h2 id="GO"><a href="#GO" class="headerlink" title="GO!"></a>GO!</h2><h3 id="Assume-already-has-a-WSL-environment-running"><a href="#Assume-already-has-a-WSL-environment-running" class="headerlink" title="Assume already has a WSL environment running"></a>Assume already has a WSL environment running</h3><p>If not, refer to “<a href="https://learn.microsoft.com/en-us/windows/wsl/install">How to install Linux on Windows with WSL</a>“.</p><p>To say we are running WSL distro - Ubuntu 22.04</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/os-release</span><br><span class="line">PRETTY_NAME=&quot;Ubuntu 22.04.4 LTS&quot;</span><br><span class="line">NAME=&quot;Ubuntu&quot;</span><br><span class="line">VERSION_ID=&quot;22.04&quot;</span><br><span class="line">VERSION=&quot;22.04.4 LTS (Jammy Jellyfish)&quot;</span><br><span class="line">VERSION_CODENAME=jammy</span><br><span class="line">ID=ubuntu</span><br><span class="line">ID_LIKE=debian</span><br><span class="line">HOME_URL=&quot;https://www.ubuntu.com/&quot;</span><br><span class="line">SUPPORT_URL=&quot;https://help.ubuntu.com/&quot;</span><br><span class="line">BUG_REPORT_URL=&quot;https://bugs.launchpad.net/ubuntu/&quot;</span><br><span class="line">PRIVACY_POLICY_URL=&quot;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&quot;</span><br><span class="line">UBUNTU_CODENAME=jammy</span><br></pre></td></tr></table></figure><h3 id="Install-Node-js"><a href="#Install-Node-js" class="headerlink" title="Install Node.js"></a>Install Node.js</h3><p>Since Hexo is written by Node.js, nodejs must be installed.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install nodejs npm</span><br></pre></td></tr></table></figure><h3 id="Install-GIT"><a href="#Install-GIT" class="headerlink" title="Install GIT"></a>Install GIT</h3><p>Since Hexo uses Git to publish pages on GitHub, Git must be installed.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install git</span><br></pre></td></tr></table></figure><h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="Init-Hexo-project"><a href="#Init-Hexo-project" class="headerlink" title="Init Hexo project"></a>Init Hexo project</h3><p>Our goal is to deploy the static HTML file generated by Hexo to GitHub Pages. To achieve this, we need to create a repository named “[username].github.io” on GitHub. Therefore, we will initialize this directory directly using Hexo.  Note: Be sure to replace [username] with your actual GitHub username.</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init kamusis.github.io</span><br></pre></td></tr></table></figure><h3 id="Create-Github-pages"><a href="#Create-Github-pages" class="headerlink" title="Create Github pages"></a>Create Github pages</h3><p>Creating GitHub Pages is very simple, reference: <a href="https://pages.github.com/">https://pages.github.com/</a></p><h3 id="Connecting-to-Github-with-SSH"><a href="#Connecting-to-Github-with-SSH" class="headerlink" title="Connecting to Github with SSH"></a>Connecting to Github with SSH</h3><p>Reference: <a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh">https://docs.github.com/en/authentication/connecting-to-github-with-ssh</a></p><p>Basically, generate a key using the ssh-keygen command and upload the public key to the GitHub.</p><p>Once the SSH connection is established, use the following command to verify it:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br><span class="line">Hi kamusis! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><h3 id="Set-URL-for-your-new-blog"><a href="#Set-URL-for-your-new-blog" class="headerlink" title="Set URL for your new blog"></a>Set URL for your new blog</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ vi _config.yml</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~</span><br><span class="line"># URL</span><br><span class="line">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class="line">url: http://kamusis.github.io</span><br></pre></td></tr></table></figure><h3 id="Set-Git-information-to-let-hexo-can-push-contents-into-Github-Pages"><a href="#Set-Git-information-to-let-hexo-can-push-contents-into-Github-Pages" class="headerlink" title="Set Git information to let hexo can push contents into Github Pages"></a>Set Git information to let hexo can push contents into Github Pages</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ vi _config.yml</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~</span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:kamusis/kamusis.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h3 id="Generate-the-site-and-push-to-Github-pages"><a href="#Generate-the-site-and-push-to-Github-pages" class="headerlink" title="Generate the site and push to Github pages"></a>Generate the site and push to Github pages</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>Assuming everything has been set up correctly, you can now view a hello-world article on a website by navigating to https:&#x2F;&#x2F;[username].github.io.</p><h3 id="Write-your-articles-and-publish"><a href="#Write-your-articles-and-publish" class="headerlink" title="Write your articles and publish"></a>Write your articles and publish</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;My first post&quot;</span><br></pre></td></tr></table></figure><p>A markdown file will automatically be created and placed in the source&#x2F;_posts directory. It can then be edited and saved using your preferred text or markdown editor.</p><p>Of course, you can also clean up the initial hello-world article.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm source/_posts/hello-world.md</span><br></pre></td></tr></table></figure><p>Publish the articles.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>Reference:</p><p><a href="https://hexo.io/docs/github-pages#One-command-deployment">https://hexo.io/docs/github-pages#One-command-deployment</a></p><p><a href="https://gist.github.com/btfak/18938572f5df000ebe06fbd1872e4e39">https://gist.github.com/btfak/18938572f5df000ebe06fbd1872e4e39</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Why-use-WSL&quot;&gt;&lt;a href=&quot;#Why-use-WSL&quot; class=&quot;headerlink&quot; title=&quot;Why use WSL&quot;&gt;&lt;/a&gt;Why use WSL&lt;/h2&gt;&lt;p&gt;Using Windows Subsystem for Linux</summary>
        
      
    
    
    
    
    <category term="WSL" scheme="http://kamusis.github.io/tags/WSL/"/>
    
    <category term="Hexo" scheme="http://kamusis.github.io/tags/Hexo/"/>
    
    <category term="Github Pages" scheme="http://kamusis.github.io/tags/Github-Pages/"/>
    
  </entry>
  
  <entry>
    <title>How to Find the Corresponding Session in MogDB/openGauss from OS Thread ID</title>
    <link href="http://kamusis.github.io/2024/05/27/How-to-Find-the-Corresponding-Session-in-MogDB-openGauss-from-OS-Thread-ID/"/>
    <id>http://kamusis.github.io/2024/05/27/How-to-Find-the-Corresponding-Session-in-MogDB-openGauss-from-OS-Thread-ID/</id>
    <published>2024-05-27T06:55:48.000Z</published>
    <updated>2024-05-27T07:01:07.248Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Diagnostic-Needs"><a href="#Diagnostic-Needs" class="headerlink" title="Diagnostic Needs"></a>Diagnostic Needs</h3><p>When the MogDB database consumes a significant amount of system resources, such as nearly 100% CPU usage, how can we determine which session(s) in the database are using these resources?</p><p>In Oracle databases, diagnosing such issues typically involves associating <code>v$session</code>, <code>v$process</code>, and the OS process ID found using the <code>top</code> or <code>ps</code> commands. However, MogDB uses a thread model, and only one process ID is visible at the OS level. So, how do we pinpoint the problem?</p><p>Since MogDB uses a thread model, unlike PostgreSQL’s process model, checking network port access with the <code>lsof</code> command at the OS level will show multiple user sessions connected, but only the process ID will be displayed in the PID column, not the thread.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">lsof -i 4 -a -p `pgrep -u omm3 mogdb`</span></span><br><span class="line">COMMAND   PID   USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class="line">mogdb   12027   omm3    8u  IPv4 20313752      0t0  TCP *:biimenu (LISTEN)</span><br><span class="line">mogdb   12027   omm3    9u  IPv4 20313753      0t0  TCP *:18001 (LISTEN)</span><br><span class="line">mogdb   12027   omm3  325u  IPv4 28320946      0t0  TCP mogdb-kernel-0004:biimenu-&gt;softbank060132034173.bbtec.net:45206 (ESTABLISHED)</span><br><span class="line">mogdb   12027   omm3  330u  IPv4 28316174      0t0  TCP mogdb-kernel-0004:biimenu-&gt;softbank060132034173.bbtec.net:45208 (ESTABLISHED)</span><br><span class="line">mogdb   12027   omm3  336u  IPv4 28302815      0t0  TCP mogdb-kernel-0004:biimenu-&gt;softbank060132034173.bbtec.net:45210 (ESTABLISHED)</span><br><span class="line">mogdb   12027   omm3  340u  IPv4 28323140      0t0  TCP mogdb-kernel-0004:biimenu-&gt;softbank060132034173.bbtec.net:45212 (ESTABLISHED)</span><br><span class="line">mogdb   12027   omm3  360u  IPv4 28323141      0t0  TCP mogdb-kernel-0004:biimenu-&gt;softbank060132034173.bbtec.net:45214 (ESTABLISHED)</span><br><span class="line">mogdb   12027   omm3  375u  IPv4 28305050      0t0  TCP mogdb-kernel-0004:biimenu-&gt;softbank060132034173.bbtec.net:45216 (ESTABLISHED)</span><br></pre></td></tr></table></figure><h3 id="How-to-Get-Thread-ID"><a href="#How-to-Get-Thread-ID" class="headerlink" title="How to Get Thread ID"></a>How to Get Thread ID</h3><p>You can use <code>htop</code>. After opening <code>htop</code>, press F5 to display the process tree. The first PID is the process ID, and each line under the tree structure shows the corresponding thread ID for that process.</p><p><img src="https://s2.loli.net/2022/05/30/HmitAhrOMNaX9WB.png" alt="img"></p><p>You can also use the <code>ps</code> command. The <code>-L</code> parameter displays threads, and the <code>-o</code> parameter specifies the columns of interest.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ps -Lp `pgrep -u omm3 mogdb` -o %cpu,tid,pid,ppid,cmd,<span class="built_in">comm</span></span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">CPU   TID   PID  PPID CMD                         COMMAND</span></span><br><span class="line"> 0.0 17847 17847     1 /opt/mogdb3/app/bin/mogdb - mogdb</span><br><span class="line"> 0.0 17848 17847     1 /opt/mogdb3/app/bin/mogdb - jemalloc_bg_thd</span><br><span class="line"> 0.0 17854 17847     1 /opt/mogdb3/app/bin/mogdb - mogdb</span><br><span class="line"> 0.0 17855 17847     1 /opt/mogdb3/app/bin/mogdb - syslogger</span><br><span class="line"> 0.0 17856 17847     1 /opt/mogdb3/app/bin/mogdb - reaper</span><br><span class="line"> 0.0 17857 17847     1 /opt/mogdb3/app/bin/mogdb - jemalloc_bg_thd</span><br><span class="line"> 0.0 17858 17847     1 /opt/mogdb3/app/bin/mogdb - jemalloc_bg_thd</span><br><span class="line"> 0.0 17860 17847     1 /opt/mogdb3/app/bin/mogdb - jemalloc_bg_thd</span><br><span class="line"> 0.0 17884 17847     1 /opt/mogdb3/app/bin/mogdb - checkpointer</span><br><span class="line"> 0.0 17885 17847     1 /opt/mogdb3/app/bin/mogdb - Spbgwriter</span><br><span class="line"> 0.1 17886 17847     1 /opt/mogdb3/app/bin/mogdb - pagewriter</span><br><span class="line"> 0.0 17887 17847     1 /opt/mogdb3/app/bin/mogdb - pagewriter</span><br><span class="line"> 0.0 17888 17847     1 /opt/mogdb3/app/bin/mogdb - pagewriter</span><br><span class="line"> 0.0 17889 17847     1 /opt/mogdb3/app/bin/mogdb - pagewriter</span><br><span class="line"> 0.0 17890 17847     1 /opt/mogdb3/app/bin/mogdb - pagewriter</span><br><span class="line"> 0.8 17891 17847     1 /opt/mogdb3/app/bin/mogdb - WALwriter</span><br><span class="line"> 0.0 17892 17847     1 /opt/mogdb3/app/bin/mogdb - WALwriteraux</span><br><span class="line"> 0.0 17893 17847     1 /opt/mogdb3/app/bin/mogdb - AVClauncher</span><br><span class="line"> 0.0 17894 17847     1 /opt/mogdb3/app/bin/mogdb - Jobscheduler</span><br><span class="line"> 0.0 17895 17847     1 /opt/mogdb3/app/bin/mogdb - asyncundolaunch</span><br><span class="line"> 0.0 17896 17847     1 /opt/mogdb3/app/bin/mogdb - globalstats</span><br><span class="line"> 0.0 17897 17847     1 /opt/mogdb3/app/bin/mogdb - applylauncher</span><br><span class="line"> 0.0 17898 17847     1 /opt/mogdb3/app/bin/mogdb - statscollector</span><br><span class="line"> 0.0 17899 17847     1 /opt/mogdb3/app/bin/mogdb - snapshotworker</span><br><span class="line"> 0.1 17900 17847     1 /opt/mogdb3/app/bin/mogdb - TrackStmtWorker</span><br><span class="line"> 0.0 17901 17847     1 /opt/mogdb3/app/bin/mogdb - 2pccleaner</span><br><span class="line"> 0.0 17902 17847     1 /opt/mogdb3/app/bin/mogdb - faultmonitor</span><br><span class="line"> 0.0 17904 17847     1 /opt/mogdb3/app/bin/mogdb - undorecycler</span><br><span class="line"> 0.0 18372 17847     1 /opt/mogdb3/app/bin/mogdb - worker</span><br><span class="line"> 0.0 18373 17847     1 /opt/mogdb3/app/bin/mogdb - worker</span><br><span class="line"> 0.0 18374 17847     1 /opt/mogdb3/app/bin/mogdb - worker</span><br><span class="line"> 0.0 18375 17847     1 /opt/mogdb3/app/bin/mogdb - worker</span><br><span class="line"> 0.0 18376 17847     1 /opt/mogdb3/app/bin/mogdb - worker</span><br><span class="line"> 0.0 18377 17847     1 /opt/mogdb3/app/bin/mogdb - worker</span><br><span class="line"> 0.0 18378 17847     1 /opt/mogdb3/app/bin/mogdb - worker</span><br><span class="line"> 0.0 18379 17847     1 /opt/mogdb3/app/bin/mogdb - worker</span><br><span class="line"> 0.0 18380 17847     1 /opt/mogdb3/app/bin/mogdb - worker</span><br><span class="line"> 0.0 18381 17847     1 /opt/mogdb3/app/bin/mogdb - worker</span><br><span class="line"> 0.0 18382 17847     1 /opt/mogdb3/app/bin/mogdb - worker</span><br><span class="line"> 0.0 18454 17847     1 /opt/mogdb3/app/bin/mogdb - worker</span><br><span class="line"> 0.0 19475 17847     1 /opt/mogdb3/app/bin/mogdb - worker</span><br><span class="line"> 0.0 19480 17847     1 /opt/mogdb3/app/bin/mogdb - worker</span><br><span class="line"> 0.0 29529 17847     1 /opt/mogdb3/app/bin/mogdb - worker</span><br><span class="line"> 0.0 30999 17847     1 /opt/mogdb3/app/bin/mogdb - worker</span><br></pre></td></tr></table></figure><p>The rows in the <code>comm</code> column that display as “worker” are backend processes of user sessions in the database. Typically, user sessions that consume high CPU can be filtered to show only user sessions using the <code>grep</code> command.</p><h3 id="How-to-Map-OS-Thread-ID-to-Database-Session"><a href="#How-to-Map-OS-Thread-ID-to-Database-Session" class="headerlink" title="How to Map OS Thread ID to Database Session"></a>How to Map OS Thread ID to Database Session</h3><p>Suppose on this server, the thread with ID 18372 is consuming a lot of CPU. In MogDB, you can query the <code>pg_os_threads</code> view to find the session ID corresponding to this thread.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> pg_os_threads <span class="keyword">where</span> lwpid<span class="operator">=</span><span class="number">18372</span>;</span><br><span class="line"></span><br><span class="line">node_name <span class="operator">|</span> pid              <span class="operator">|</span> lwpid <span class="operator">|</span> thread_name <span class="operator">|</span> creation_time</span><br><span class="line"><span class="comment">----------+------------------+-------+-------------+------------------------------</span></span><br><span class="line">dn_6001   <span class="operator">|</span> <span class="number">140545137571584</span>  <span class="operator">|</span> <span class="number">18372</span> <span class="operator">|</span> dn_6001     <span class="operator">|</span> <span class="number">2022</span><span class="number">-05</span><span class="number">-30</span> <span class="number">19</span>:<span class="number">54</span>:<span class="number">42.459129</span><span class="operator">+</span><span class="number">08</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure><p>The <code>pg_os_threads</code> view records the relationship between lightweight thread IDs and session IDs. The <code>lwpid</code> column is the OS thread ID, and the <code>pid</code> column is the database session ID. For detailed information, refer to the MogDB documentation on <code>PG_OS_THREADS</code>.</p><p>If you have <code>monadmin</code> privileges, you can also query the <code>os_threads</code> view in the <code>dbe_perf</code> schema, which provides the same information.</p><p>After finding the database session ID, you can perform various actions, such as querying the <code>dbe_perf.session_stat_activity</code> view to get the application name, client IP address, and the SQL query being executed by that session.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> application_name, client_addr, query <span class="keyword">from</span> dbe_perf.session_stat_activity <span class="keyword">where</span> pid<span class="operator">=</span><span class="number">140545137571584</span>;</span><br><span class="line"></span><br><span class="line">application_name <span class="operator">|</span> client_addr <span class="operator">|</span> query</span><br><span class="line"><span class="comment">-----------------+-------------+---------------------------------------------</span></span><br><span class="line">dn_6001          <span class="operator">|</span> <span class="number">172.16</span><span class="number">.0</span><span class="number">.176</span><span class="operator">|</span> <span class="keyword">SELECT</span> cfg_value <span class="keyword">FROM</span> bmsql_config <span class="keyword">WHERE</span> cfg_name <span class="operator">=</span> $<span class="number">1</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure><p>You can also query the <code>dbe_perf.thread_wait_status</code> view to get the current wait event of the session. Note that this view contains the <code>lwtid</code> field, which directly corresponds to the thread ID.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MogDB<span class="operator">=</span># <span class="keyword">select</span> lwtid, wait_status, wait_event <span class="keyword">from</span> dbe_perf.thread_wait_status <span class="keyword">where</span> sessionid<span class="operator">=</span><span class="number">140545137571584</span>;</span><br><span class="line"></span><br><span class="line">lwtid <span class="operator">|</span> wait_status <span class="operator">|</span> wait_event</span><br><span class="line"><span class="comment">------+-------------+-----------</span></span><br><span class="line"><span class="number">18372</span> <span class="operator">|</span> wait cmd    <span class="operator">|</span> wait cmd</span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;Diagnostic-Needs&quot;&gt;&lt;a href=&quot;#Diagnostic-Needs&quot; class=&quot;headerlink&quot; title=&quot;Diagnostic Needs&quot;&gt;&lt;/a&gt;Diagnostic Needs&lt;/h3&gt;&lt;p&gt;When the</summary>
        
      
    
    
    
    
    <category term="MogDB" scheme="http://kamusis.github.io/tags/MogDB/"/>
    
  </entry>
  
  <entry>
    <title>MogDB ASH: Unveiling the Active Session History for Powerful Database Performance Tuning</title>
    <link href="http://kamusis.github.io/2024/05/27/MogDB-ASH-Unveiling-the-Active-Session-History-for-Powerful-Database-Performance-Tuning/"/>
    <id>http://kamusis.github.io/2024/05/27/MogDB-ASH-Unveiling-the-Active-Session-History-for-Powerful-Database-Performance-Tuning/</id>
    <published>2024-05-27T06:48:34.000Z</published>
    <updated>2024-05-27T07:01:32.325Z</updated>
    
    <content type="html"><![CDATA[<h4 id="What-is-ASH"><a href="#What-is-ASH" class="headerlink" title="What is ASH?"></a>What is ASH?</h4><p>ASH, or Active Session History, is a feature in Oracle databases that records information about active sessions at regular intervals in both the database memory and persistent system tables. Data in memory is cleared after a database restart, but data in the persistent system tables is retained for a longer period. ASH is extremely useful for diagnosing issues when the database encounters problems or performance issues by allowing retrospective analysis to identify the root cause.</p><p>In MogDB, a similar ASH capability is implemented.</p><h4 id="ASH-Capability-in-MogDB"><a href="#ASH-Capability-in-MogDB" class="headerlink" title="ASH Capability in MogDB"></a>ASH Capability in MogDB</h4><p>The ASH capability in MogDB is divided into two parts: the open-source community version (openGauss) and the enhanced enterprise version.</p><p><strong>1. openGauss Community Version:</strong><br>MogDB inherits the ASH capability from openGauss. The database provides two main views: <code>dbe_perf.LOCAL_ACTIVE_SESSION</code> and <code>GS_ASP</code>. The <code>LOCAL_ACTIVE_SESSION</code> view is an in-memory table, while <code>GS_ASP</code> is a persistent table. These views contain sampling information about current active sessions.</p><p>Key parameters affecting ASH functionality:</p><ul><li><strong>enable_asp:</strong> Set to <code>on</code> or <code>off</code> to enable or disable ASH functionality. Default is <code>on</code>.</li><li><strong>asp_sample_interval:</strong> Specifies the interval between each sample. Default is 1 second. To reduce sampling pressure, this can be set to a longer interval, up to a maximum of 10 seconds.</li><li><strong>asp_sample_num:</strong> Specifies the total number of samples retained in the <code>LOCAL_ACTIVE_SESSION</code> in-memory table. Exceeding this number triggers a flush of in-memory samples to the <code>GS_ASP</code> system table and clears the in-memory table. Default is 100,000 samples.</li><li><strong>asp_flush_rate:</strong> Determines which in-memory samples are flushed to the <code>GS_ASP</code> table. Samples with <code>sampleid % asp_flush_rate == 0</code> are marked as <code>need_flush_sample=true</code> and are persisted. Default is 10, meaning 1&#x2F;10 of samples are persisted.</li><li><strong>asp_retention_days:</strong> Specifies the retention period for data in the <code>GS_ASP</code> table. Default is 2 days, with a maximum of 7 days.</li></ul><p><strong>2. MogDB Enterprise Version:</strong><br>The enterprise version enhances ASH capability, termed “SQL Execution State Observation,” by adding sampling of SQL execution operators. The <code>plan_node_id</code> field is added to views to record the execution operator during each sample, allowing identification of which step in the execution plan is causing performance issues.</p><p>Key parameters affecting enterprise ASH functionality:</p><ul><li><strong>resource_track_level:</strong> Set to <code>operator</code> to enable operator sampling capability. Default is <code>query</code>, which records only SQL-level sampling.</li></ul><h4 id="LOCAL-ACTIVE-SESSION-View"><a href="#LOCAL-ACTIVE-SESSION-View" class="headerlink" title="LOCAL_ACTIVE_SESSION View"></a>LOCAL_ACTIVE_SESSION View</h4><p>This view records extensive information, including session ID, wait events, and SQL query ID (which can be linked to <code>dbe_perf.statement_history</code> or <code>dbe_perf.statement_complex_runtime</code> to retrieve SQL text and execution plans). </p><p><img src="https://s2.loli.net/2022/10/24/UZR4wcX8lyeDHS7.png" alt="image-20221024155531233"></p><p>Note: The <code>plan_node_id</code> field exists only in the enterprise version.</p><h4 id="Recording-SQL-Execution-Plans"><a href="#Recording-SQL-Execution-Plans" class="headerlink" title="Recording SQL Execution Plans"></a>Recording SQL Execution Plans</h4><p>Querying the execution plans of past or currently executing SQL is a common requirement in database maintenance. In MogDB, the following views record SQL execution plans:</p><ul><li><strong>dbe_perf.STATEMENT_HISTORY:</strong> Records information about completed SQL, including execution plans (<code>query_plan</code> field).</li><li><strong>dbe_perf.STATEMENT_COMPLEX_RUNTIME:</strong> Records information about currently executing SQL, including execution plans (<code>query_plan</code> field).</li></ul><p>Parameters affecting recording of SQL execution plans:</p><ul><li><strong>enable_resource_track:</strong> Enables or disables resource tracking. Default is <code>on</code>. If set to <code>off</code>, no user SQL execution information, including execution plans, is tracked.</li><li><strong>resource_track_cost:</strong> Sets the minimum execution cost for SQL statements to be tracked. Only SQL with a cost above this value will have its execution plan recorded.</li></ul><h4 id="Comprehensive-Query-Example"><a href="#Comprehensive-Query-Example" class="headerlink" title="Comprehensive Query Example"></a>Comprehensive Query Example</h4><p>The following query retrieves all information about ongoing SQL executions, including historical samples:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> las.sample_time, las.application_name, las.unique_query_id, las.event, scr.query, scr.query_plan</span><br><span class="line"><span class="keyword">FROM</span> dbe_perf.local_active_session las, dbe_perf.statement_complex_runtime scr</span><br><span class="line"><span class="keyword">WHERE</span> las.thread_id <span class="operator">=</span> scr.pid <span class="keyword">AND</span> scr.pid <span class="operator">&lt;&gt;</span> pg_backend_pid();</span><br></pre></td></tr></table></figure><p>Example output shows a frequently executed full table scan query, including SQL text, execution plan, and client information, providing valuable data for performance diagnosis.</p><p><img src="https://s2.loli.net/2022/10/24/MxBW7629sCSaGKp.png" alt="image-20221024183300024"></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h4 id=&quot;What-is-ASH&quot;&gt;&lt;a href=&quot;#What-is-ASH&quot; class=&quot;headerlink&quot; title=&quot;What is ASH?&quot;&gt;&lt;/a&gt;What is ASH?&lt;/h4&gt;&lt;p&gt;ASH, or Active Session History,</summary>
        
      
    
    
    
    
    <category term="MogDB" scheme="http://kamusis.github.io/tags/MogDB/"/>
    
  </entry>
  
  <entry>
    <title>How to move WSL distro in Windows 11 to another drive</title>
    <link href="http://kamusis.github.io/2024/05/27/How-to-move-WSL-distro-in-Windows-11-to-another-drive/"/>
    <id>http://kamusis.github.io/2024/05/27/How-to-move-WSL-distro-in-Windows-11-to-another-drive/</id>
    <published>2024-05-27T06:17:24.000Z</published>
    <updated>2024-05-27T09:45:08.699Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h2><p>In the world of development and system administration, Windows Subsystem for Linux (WSL) has become a valuable tool. It allows users to run a Linux distribution alongside their Windows environment, opening up a world of possibilities for developers and administrators. In this article, we’ll guide you through the process of migrating a WSL instance, using a real-world example, step by step.</p><h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites:"></a>Prerequisites:</h2><p>Before we begin, ensure that you have the following prerequisites in place:</p><ul><li>Windows 10 or later with WSL installed.</li><li>An existing WSL instance (in our case, Ubuntu).</li><li>Sufficient storage space for the migration.</li></ul><h2 id="Step-1-Create-a-Target-Directory"><a href="#Step-1-Create-a-Target-Directory" class="headerlink" title="Step 1: Create a Target Directory"></a>Step 1: Create a Target Directory</h2><p>To start the migration process, we need a target directory to store the migrated WSL instance. In PowerShell, use the ‘mkdir’ command to create this directory. In our example, we create a directory named ‘D:\WSL\Ubuntu’:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="literal">-p</span> D:\WSL\Ubuntu</span><br></pre></td></tr></table></figure><h2 id="Step-2-List-All-Running-WSL-Instances"><a href="#Step-2-List-All-Running-WSL-Instances" class="headerlink" title="Step 2: List All Running WSL Instances"></a>Step 2: List All Running WSL Instances</h2><p>Before we proceed further, let’s list all the running WSL instances. The following command will display a list of all WSL instances, including their state and version:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">-l</span> <span class="literal">--all</span> <span class="literal">-v</span></span><br></pre></td></tr></table></figure><h2 id="Step-3-Export-the-Source-WSL-Instance"><a href="#Step-3-Export-the-Source-WSL-Instance" class="headerlink" title="Step 3: Export the Source WSL Instance"></a>Step 3: Export the Source WSL Instance</h2><p>Now, let’s export the source WSL instance (in our case, ‘Ubuntu’) into a tar file. This step automatically shuts down the WSL instance and restarts it after the export:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--export</span> Ubuntu D:\WSL\Ubuntu.tar</span><br></pre></td></tr></table></figure><h2 id="Step-4-Unregister-the-Source-WSL-Instance"><a href="#Step-4-Unregister-the-Source-WSL-Instance" class="headerlink" title="Step 4: Unregister the Source WSL Instance"></a>Step 4: Unregister the Source WSL Instance</h2><p>Once the export is complete, we need to unregister the source WSL instance to avoid conflicts. Use the following command:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--unregister</span> Ubuntu</span><br></pre></td></tr></table></figure><h2 id="Step-5-Confirm-Unregistration"><a href="#Step-5-Confirm-Unregistration" class="headerlink" title="Step 5: Confirm Unregistration"></a>Step 5: Confirm Unregistration</h2><p>To confirm that the source WSL instance has been successfully unregistered, run the following command:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">-l</span> <span class="literal">--all</span> <span class="literal">-v</span></span><br></pre></td></tr></table></figure><h2 id="Step-6-Import-into-the-Target-Directory"><a href="#Step-6-Import-into-the-Target-Directory" class="headerlink" title="Step 6: Import into the Target Directory"></a>Step 6: Import into the Target Directory</h2><p>Now it’s time to import the previously exported WSL instance into the target directory. In this step, we specify the target directory and version (in our case, version 2):</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--import</span> Ubuntu D:\WSL\Ubuntu D:\WSL\Ubuntu.tar <span class="literal">--version</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="Step-7-Verify-the-Migration"><a href="#Step-7-Verify-the-Migration" class="headerlink" title="Step 7: Verify the Migration"></a>Step 7: Verify the Migration</h2><p>To ensure that the migration was successful, list all WSL instances once again:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">-l</span> <span class="literal">--all</span> <span class="literal">-v</span></span><br></pre></td></tr></table></figure><h2 id="Step-8-Access-the-Migrated-WSL-Instance"><a href="#Step-8-Access-the-Migrated-WSL-Instance" class="headerlink" title="Step 8: Access the Migrated WSL Instance"></a>Step 8: Access the Migrated WSL Instance</h2><p>Now, you can access the migrated WSL instance by using the following command:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">-d</span> Ubuntu</span><br></pre></td></tr></table></figure><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h2><p>Migrating WSL instances is a powerful way to manage and organize your development environments. By following these steps, you can seamlessly move your WSL instances to different directories or machines, ensuring flexibility and efficiency in your development workflow. Keep in mind that WSL provides a bridge between Windows and Linux, allowing you to enjoy the best of both worlds.</p><p>Check the all steps screenshot as below.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"># create target directory</span><br><span class="line">PS C:\Users\kamus&gt; mkdir -p D:\WSL\Ubuntu</span><br><span class="line"></span><br><span class="line"># List all the wsl running</span><br><span class="line">PS C:\Users\kamus&gt; wsl -l --all -v</span><br><span class="line">  NAME                   STATE           VERSION</span><br><span class="line">* Ubuntu                 Running         2</span><br><span class="line">  docker-desktop         Stopped         2</span><br><span class="line">  docker-desktop-data    Stopped         2</span><br><span class="line">  </span><br><span class="line"># Export source wsl</span><br><span class="line">PS C:\Users\kamus&gt; wsl --export Ubuntu D:\WSL\Ubuntu.tar</span><br><span class="line"></span><br><span class="line"># When doing export, wsl will be shutdown automatically and restart after exporting</span><br><span class="line">PS C:\Users\kamus&gt; wsl -l --all -v</span><br><span class="line">  NAME                   STATE           VERSION</span><br><span class="line">* Ubuntu                 Running         2</span><br><span class="line">  docker-desktop         Stopped         2</span><br><span class="line">  docker-desktop-data    Stopped         2</span><br><span class="line">  </span><br><span class="line"># Unregister the source wsl</span><br><span class="line">PS C:\Users\kamus&gt; wsl --unregister Ubuntu</span><br><span class="line">正在注销...</span><br><span class="line"></span><br><span class="line"># Check unregister is successful</span><br><span class="line">PS C:\Users\kamus&gt; wsl -l --all -v</span><br><span class="line">  NAME                   STATE           VERSION</span><br><span class="line">* docker-desktop         Stopped         2</span><br><span class="line">  docker-desktop-data    Stopped         2</span><br><span class="line">  </span><br><span class="line"># Import into the target directory</span><br><span class="line">PS C:\Users\kamus&gt; wsl --import Ubuntu D:\WSL\Ubuntu D:\WSL\Ubuntu.tar --version 2</span><br><span class="line"></span><br><span class="line"># Check results</span><br><span class="line">PS C:\Users\kamus&gt; wsl -l --all -v</span><br><span class="line">  NAME                   STATE           VERSION</span><br><span class="line">* docker-desktop         Stopped         2</span><br><span class="line">  Ubuntu                 Stopped         2</span><br><span class="line">  docker-desktop-data    Stopped         2</span><br><span class="line">PS C:\Users\kamus&gt; wsl -d Ubuntu</span><br><span class="line">Welcome to Ubuntu 20.04.5 LTS (GNU/Linux 5.10.102.1-microsoft-standard-WSL2 x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">  System information as of Fri Jan  5 14:40:25 JST 2024</span><br><span class="line"></span><br><span class="line">  System load:  0.68               Processes:             8</span><br><span class="line">  Usage of /:   2.0% of 250.98GB   Users logged in:       0</span><br><span class="line">  Memory usage: 4%                 IPv4 address for eth0: 172.28.208.11</span><br><span class="line">  Swap usage:   0%</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">0 updates can be applied immediately.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">The list of available updates is more than a week old.</span><br><span class="line">To check for new updates run: sudo apt update</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">This message is shown once a day. To disable it please create the</span><br><span class="line">/root/.hushlogin file.</span><br><span class="line">root@Kamus-Trident:/mnt/c/Users/kamus# cat /etc/os-release</span><br><span class="line">NAME=&quot;Ubuntu&quot;</span><br><span class="line">VERSION=&quot;20.04.5 LTS (Focal Fossa)&quot;</span><br><span class="line">ID=ubuntu</span><br><span class="line">ID_LIKE=debian</span><br><span class="line">PRETTY_NAME=&quot;Ubuntu 20.04.5 LTS&quot;</span><br><span class="line">VERSION_ID=&quot;20.04&quot;</span><br><span class="line">HOME_URL=&quot;https://www.ubuntu.com/&quot;</span><br><span class="line">SUPPORT_URL=&quot;https://help.ubuntu.com/&quot;</span><br><span class="line">BUG_REPORT_URL=&quot;https://bugs.launchpad.net/ubuntu/&quot;</span><br><span class="line">PRIVACY_POLICY_URL=&quot;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&quot;</span><br><span class="line">VERSION_CODENAME=focal</span><br><span class="line">UBUNTU_CODENAME=focal</span><br><span class="line">root@Kamus-Trident:/mnt/c/Users/kamus#</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction:&quot;&gt;&lt;/a&gt;Introduction:&lt;/h2&gt;&lt;p&gt;In the world of development</summary>
        
      
    
    
    
    
    <category term="Windows" scheme="http://kamusis.github.io/tags/Windows/"/>
    
    <category term="WSL" scheme="http://kamusis.github.io/tags/WSL/"/>
    
  </entry>
  
  <entry>
    <title>Unlocking the Power: Key Features of MogDB</title>
    <link href="http://kamusis.github.io/2024/05/27/Unlocking-the-Power-Key-Features-of-MogDB/"/>
    <id>http://kamusis.github.io/2024/05/27/Unlocking-the-Power-Key-Features-of-MogDB/</id>
    <published>2024-05-27T06:16:11.000Z</published>
    <updated>2024-05-27T06:16:59.322Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction-to-MogDB"><a href="#Introduction-to-MogDB" class="headerlink" title="Introduction to MogDB"></a>Introduction to MogDB</h2><p><a href="https://www.mogdb.io/">MogDB</a> is a cutting-edge distributed relational database management system that offers an array of powerful features designed to meet the needs of modern businesses. With its high performance, availability, maintainability, compatibility, and AI capabilities, MogDB stands out as a top choice for database administrators, developers, and IT professionals.</p><p>One of the key selling points of MogDB is its ability to deliver exceptional performance. This is achieved through various innovative features such as the <a href="https://docs.mogdb.io/en/mogdb/v2.0/2-optimizer-cost-constants/">Cost-Based Optimizer</a> (CBO) optimizer, which intelligently chooses the most efficient execution plans for queries. Additionally, MogDB utilizes a <a href="https://docs.mogdb.io/en/mogdb/v3.1/3-vectorized-engine/">vectorized engine</a> that processes data in batches instead of row by row, resulting in significant performance improvements. The <a href="https://docs.mogdb.io/en/mogdb/v3.0/5-adaptive-compression">adaptive compression</a> feature further enhances performance by reducing storage requirements and minimizing I&#x2F;O operations.</p><p>In terms of availability, MogDB offers robust solutions to ensure uninterrupted access to critical data. It supports <a href="https://en.wikipedia.org/wiki/Master-slave_replication">master-slave replication</a>, allowing for automatic failover in case of primary node failure. <a href="https://docs.mogdb.io/en/mogdb/v2.1/2-logical-replication">Logical replication</a> enables real-time data synchronization across multiple databases, while <a href="https://docs.mogdb.io/en/mogdb/v2.1/5-physical-backup">physical backup</a> provides reliable data protection. <a href="https://docs.mogdb.io/en/mogdb/v3.0/9-delayed-replay">Delayed replay</a> allows for easy recovery from accidental data corruption or deletion.</p><p>Maintaining a database can be complex and time-consuming. However, MogDB simplifies this process with its advanced maintainability features. The <a href="https://docs.mogdb.io/en/mogdb/v3.0/upgrade-guide/">grey upgrade</a> feature allows for seamless upgrades without interrupting service availability. <a href="https://docs.mogdb.io/en/mogdb/v3.1/3-slow-sql-diagnosis">Slow SQL diagnosis</a> helps identify and optimize poorly performing queries, improving overall system efficiency. <a href="https://docs.mogdb.io/en/mogdb/v2.1/5-system-kpi-aided-diagnosis/">System KPI diagnosis</a> provides insights into system health and performance metrics, enabling proactive maintenance and troubleshooting. Fault diagnosis helps pinpoint issues quickly and accurately.</p><p>Compatibility is another area where MogDB excels. It supports various SQL features and ensures compatibility with popular database systems such as Oracle and MySQL. This makes it easier for organizations to migrate their existing applications or leverage their existing SQL knowledge without major modifications.</p><p>MogDB also boasts impressive AI capabilities that set it apart from traditional databases. The AI4DB feature enables autonomous database operations, automating routine tasks and optimizing performance based on machine learning algorithms. DB4AI allows for database-driven AI, empowering organizations to leverage their data for advanced analytics and machine learning applications. Additionally, the ABO optimizer intelligently adapts query execution plans based on real-time data statistics, further enhancing performance.</p><h2 id="High-Performance-Features"><a href="#High-Performance-Features" class="headerlink" title="High Performance Features"></a>High Performance Features</h2><p>MogDB is designed to deliver exceptional performance, ensuring that your database operations run smoothly and efficiently. With its cutting-edge features, MogDB offers unparalleled speed and optimization capabilities.</p><p>One of the key high-performance features of MogDB is the Cost-Based Optimizer (CBO). This optimizer leverages advanced algorithms and statistical models to determine the most efficient execution plan for queries. By analyzing query statistics and data distribution, the CBO can make intelligent decisions on how to execute queries in the most optimal way. This results in faster query processing times and improved overall performance.</p><p>In addition to the CBO optimizer, MogDB also utilizes a vectorized engine. This engine takes advantage of modern CPU architectures by performing operations on entire vectors of data at once, rather than processing individual elements sequentially. As a result, complex queries that involve large datasets can be executed more quickly and efficiently.</p><p>Another feature that contributes to MogDB’s high performance is adaptive compression. This feature dynamically adjusts the level of compression applied to data based on its characteristics and usage patterns. By compressing data when it is not actively being accessed or modified, MogDB can reduce storage requirements and improve I&#x2F;O performance. When data needs to be accessed or modified, it is decompressed on-the-fly for seamless operations.</p><p>Parallel query optimization is yet another powerful feature offered by MogDB. This feature allows queries to be divided into smaller tasks that can be executed simultaneously across multiple cores or nodes in a distributed environment. By leveraging parallelism, MogDB can significantly speed up query processing times for large datasets or complex queries.</p><p>With these high-performance features combined, MogDB ensures that your database operations are lightning-fast and efficient. Whether you’re running simple CRUD operations or complex analytical queries, you can rely on MogDB to deliver exceptional performance every time.</p><p>It’s worth noting that while these high-performance features greatly enhance the speed and efficiency of MogDB, they do not compromise on data integrity or reliability. MogDB is built with a strong focus on ACID (Atomicity, Consistency, Isolation, Durability) principles, ensuring that your data remains consistent and reliable even under high-performance workloads.</p><h2 id="High-Availability-Features"><a href="#High-Availability-Features" class="headerlink" title="High Availability Features"></a>High Availability Features</h2><p>Ensuring high availability is crucial for any database management system, and MogDB excels in this aspect with its robust set of features. Let’s dive into the key high availability features that make MogDB a reliable choice for businesses.</p><p><strong>Master-slave replication for data redundancy</strong></p><p>MogDB offers master-slave replication, a powerful feature that enhances data redundancy and fault tolerance. With this feature, changes made to the master node are automatically replicated to one or more slave nodes. In the event of a failure or outage on the master node, one of the slave nodes can seamlessly take over as the new master, ensuring uninterrupted service availability. This replication mechanism not only provides data redundancy but also improves read scalability by allowing read operations to be distributed across multiple nodes.</p><p><strong>Logical replication for real-time data synchronization</strong></p><p>In addition to master-slave replication, MogDB supports logical replication, enabling real-time data synchronization between databases. This feature allows specific tables or even subsets of tables to be replicated from one database instance to another. By capturing and propagating changes at the logical level rather than replicating entire physical blocks, logical replication minimizes network traffic and reduces latency. It enables businesses to maintain up-to-date replicas of their databases for reporting purposes or offloading read-intensive workloads without impacting the performance of the primary database.</p><p><strong>Physical backup for data protection</strong></p><p>Data protection is paramount in any database system, and MogDB addresses this need through its physical backup feature. With physical backups, administrators can create full copies of their databases at a specific point in time. These backups capture both the schema and data files, ensuring comprehensive recovery options in case of hardware failures, user errors, or other catastrophic events. MogDB’s physical backup mechanism provides flexibility by allowing backups to be stored on different storage devices or even transferred to remote locations for disaster recovery purposes.</p><p><strong>Delayed replay for data recovery</strong></p><p>MogDB includes a delayed replay feature that allows administrators to recover data from a specific point in time. This feature is particularly useful in scenarios where accidental data deletions or modifications occur and need to be rolled back. By leveraging the transaction log, MogDB can replay changes up until a certain point, effectively restoring the database to its state prior to the incident. The delayed replay feature provides an additional layer of protection against human errors or malicious activities, ensuring that businesses can quickly recover from data-related incidents.</p><p>In summary, MogDB offers a comprehensive set of high availability features that guarantee reliability and continuous operation for businesses. The master-slave replication ensures data redundancy and read scalability, while logical replication enables real-time data synchronization for reporting or offloading purposes. Physical backups and delayed replay provide robust data protection mechanisms, allowing administrators to recover from hardware failures or user errors effectively. With these high availability features, MogDB empowers organizations with the confidence that their critical databases will remain accessible and resilient even in the face of unexpected challenges.</p><p>*[E-A-T]: Expertise, Authoritativeness, Trustworthiness</p><h2 id="Maintainability-Features"><a href="#Maintainability-Features" class="headerlink" title="Maintainability Features"></a>Maintainability Features</h2><p>Maintainability is a crucial aspect of any database management system, and MogDB excels in this area with its array of innovative features. These features are designed to ensure seamless system updates, optimize performance, monitor and analyze system KPIs, and resolve any potential faults. Let’s explore these maintainability features in detail.</p><p>One of the standout maintainability features of MogDB is the grey upgrade capability. This feature allows for seamless system updates without interrupting ongoing operations. With grey upgrade, administrators can apply patches, upgrades, or even major version changes to MogDB without causing downtime or disrupting user access. This ensures that businesses can keep their databases up-to-date with the latest enhancements and security fixes while minimizing any potential disruptions to their operations.</p><p>Another essential maintainability feature offered by MogDB is slow SQL diagnosis. Slow SQL queries can significantly impact database performance and user experience. MogDB addresses this issue by providing comprehensive tools for identifying and optimizing slow SQL queries. The system analyzes query execution plans, identifies bottlenecks, and suggests optimizations to improve query performance. By pinpointing problematic queries and optimizing them, administrators can enhance overall database performance and ensure smooth operation.</p><p>System KPI diagnosis is another vital component of MogDB’s maintainability arsenal. Monitoring key performance indicators (KPIs) is crucial for understanding the health and efficiency of a database system. MogDB provides robust tools for monitoring and analyzing various KPIs such as CPU utilization, memory usage, disk I&#x2F;O, network traffic, and more. Administrators can set up custom alerts based on predefined thresholds to proactively identify any anomalies or potential issues before they impact the system’s performance or availability.</p><p>In addition to diagnosing slow SQL queries and monitoring KPIs, MogDB also offers fault diagnosis capabilities. When an issue arises within the database system, it is essential to quickly identify the root cause and resolve it efficiently. MogDB provides advanced diagnostic tools that help administrators identify and troubleshoot various types of faults, including hardware failures, network issues, software bugs, or configuration problems. By quickly identifying and resolving faults, administrators can minimize downtime and ensure the continuous availability of their database system.</p><h2 id="Compatibility-Features"><a href="#Compatibility-Features" class="headerlink" title="Compatibility Features"></a>Compatibility Features</h2><p>MogDB offers a wide range of compatibility features that make it a versatile and flexible choice for database administrators, developers, and IT professionals. One of the key compatibility features is its support for various SQL features. With MogDB, you can leverage the full power of SQL and take advantage of advanced querying capabilities to meet your specific business needs.</p><p>In addition to its support for SQL features, MogDB also provides seamless compatibility with Oracle databases. This compatibility feature allows for easy migration from Oracle to MogDB without any major disruptions or changes to your existing applications. The transition process is smooth and hassle-free, ensuring that you can quickly start benefiting from the high-performance and highly available nature of MogDB.</p><p>Another compatibility feature offered by MogDB is its support for MySQL databases. This means that you can seamlessly integrate MogDB into your existing MySQL infrastructure without any major modifications. Whether you are running applications that rely on MySQL or have data stored in MySQL databases, MogDB ensures a seamless integration process, allowing you to leverage the advanced capabilities and performance enhancements provided by MogDB.</p><p>The compatibility features of MogDB not only enable smooth transitions and integrations but also ensure that your existing applications continue to function seamlessly with minimal changes required. This level of compatibility reduces the effort and time required for migration or integration projects, allowing you to focus on other critical aspects of your business.</p><p>With its comprehensive set of compatibility features, MogDB provides a robust solution that meets the diverse needs of different industries and applications. Whether you are working with complex SQL queries, migrating from Oracle databases, or integrating with MySQL infrastructure, MogDB offers the flexibility and reliability needed to ensure a successful deployment.</p><h2 id="AI-Capabilities"><a href="#AI-Capabilities" class="headerlink" title="AI Capabilities"></a>AI Capabilities</h2><p>MogDB stands out among other distributed relational database management systems due to its advanced AI capabilities. These capabilities empower organizations to leverage the power of artificial intelligence for autonomous database operations, database-driven AI, and improved performance through the ABO optimizer.</p><h3 id="AI4DB-for-Autonomous-Database-Operations"><a href="#AI4DB-for-Autonomous-Database-Operations" class="headerlink" title="AI4DB for Autonomous Database Operations"></a>AI4DB for Autonomous Database Operations</h3><p>With MogDB’s AI4DB feature, organizations can enhance their operational efficiency by automating various database tasks. This includes automated performance tuning, query optimization, and workload management. The AI algorithms embedded within MogDB continuously monitor the system’s performance metrics and automatically adjust configurations to optimize resource allocation and improve overall database performance.</p><p>AI4DB also plays a crucial role in self-healing mechanisms. It can detect anomalies or potential issues within the database environment and take proactive measures to resolve them before they impact critical business operations. By leveraging machine learning algorithms, MogDB can identify patterns in historical data and predict potential failures or bottlenecks, allowing administrators to take preventive actions.</p><p>Furthermore, AI4DB enables intelligent data compression techniques that optimize storage utilization without compromising query performance. By analyzing data access patterns and applying advanced compression algorithms, MogDB reduces storage costs while ensuring fast data retrieval.</p><h3 id="DB4AI-for-Database-Driven-AI"><a href="#DB4AI-for-Database-Driven-AI" class="headerlink" title="DB4AI for Database-Driven AI"></a>DB4AI for Database-Driven AI</h3><p>MogDB’s DB4AI feature allows organizations to seamlessly integrate their databases with artificial intelligence applications. This empowers businesses to unlock valuable insights from their vast amounts of structured and unstructured data.</p><p>By providing native support for popular machine learning frameworks such as TensorFlow and PyTorch, MogDB simplifies the process of training and deploying AI models directly within the database environment. This eliminates the need for complex data pipelines or costly data transfers between different systems.</p><p>With DB4AI, organizations can leverage the full potential of their databases by performing real-time analytics on large volumes of data. They can train predictive models using historical data stored in MogDB and make accurate predictions based on real-time information ingested into the database. This enables businesses to make data-driven decisions faster and gain a competitive edge in today’s fast-paced market.</p><h3 id="ABO-Optimizer-for-Improved-Performance"><a href="#ABO-Optimizer-for-Improved-Performance" class="headerlink" title="ABO Optimizer for Improved Performance"></a>ABO Optimizer for Improved Performance</h3><p>MogDB’s AI capabilities extend to its query optimization engine through the Adaptive Bitwise Optimization (ABO) optimizer. This innovative feature leverages machine learning techniques to intelligently optimize query execution plans based on historical performance data.</p><p>The ABO optimizer continuously analyzes query patterns, execution statistics, and system resources to identify optimal query plans. By learning from past experiences, it can adaptively adjust execution strategies to improve overall query performance. This results in faster response times and more efficient resource utilization.</p><p>Furthermore, the ABO optimizer reduces the need for manual tuning by automatically selecting the most appropriate join methods, access paths, and index usage based on the characteristics of each query. This simplifies database administration tasks and allows administrators to focus on higher-level optimizations rather than fine-tuning individual queries.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>The key features of MogDB make it a powerful and versatile option for database administrators, developers, and IT professionals. Its high performance capabilities, such as the CBO optimizer, vectorized engine, adaptive compression, and parallel query optimization, ensure that users can process large amounts of data quickly and efficiently. This is crucial in today’s fast-paced business environment where time is of the essence.</p><p>Furthermore, MogDB offers high availability features that guarantee uninterrupted access to critical data. The master-slave replication, logical replication, physical backup, and delayed replay functionalities ensure that data is always accessible even in the event of system failures or disasters. This level of reliability instills confidence in users and provides peace of mind knowing that their data is safe.</p><p>Maintainability is another key aspect of MogDB. With features like grey upgrade, slow SQL diagnosis, system KPI diagnosis, and fault diagnosis tools, administrators can easily identify and resolve issues within the database system. This streamlines maintenance processes and minimizes downtime for businesses.</p><p>Compatibility with various SQL features as well as Oracle and MySQL compatibility allows for seamless integration with existing systems and applications. This eliminates the need for extensive modifications or rewrites when migrating from other database management systems to MogDB.</p><p>In addition to these impressive features, MogDB also offers AI capabilities through AI4DB for autonomous database operations and DB4AI for database-driven AI. These advanced capabilities enable users to leverage artificial intelligence technologies within their databases to enhance performance and gain valuable insights from their data.</p><p>Overall, MogDB stands out as a highly performant, highly available, easy-to-use distributed relational database management system with a wide range of features tailored to meet the needs of modern businesses. Its compatibility with existing systems and applications combined with its AI capabilities make it an attractive choice for organizations across industries. Whether you are a database administrator looking for improved performance or a developer seeking seamless integration options, MogDB has you covered. Trust in MogDB to unlock the power of your data.</p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;Introduction-to-MogDB&quot;&gt;&lt;a href=&quot;#Introduction-to-MogDB&quot; class=&quot;headerlink&quot; title=&quot;Introduction to MogDB&quot;&gt;&lt;/a&gt;Introduction to</summary>
        
      
    
    
    
    
    <category term="MogDB" scheme="http://kamusis.github.io/tags/MogDB/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://kamusis.github.io/1970/01/01/The%20best%20practices%20for%20using%20partition%20table%20in%20PostgreSQL/"/>
    <id>http://kamusis.github.io/1970/01/01/The%20best%20practices%20for%20using%20partition%20table%20in%20PostgreSQL/</id>
    <published>1970-01-01T00:00:00.000Z</published>
    <updated>2024-10-11T20:23:08.346Z</updated>
    
    <content type="html"><![CDATA[<h1 id="The-best-practices-for-using-partition-table-in-PostgreSQL"><a href="#The-best-practices-for-using-partition-table-in-PostgreSQL" class="headerlink" title="The best practices for using partition table in PostgreSQL"></a>The best practices for using partition table in PostgreSQL</h1><h2 id="What-is-partition-table"><a href="#What-is-partition-table" class="headerlink" title="What is partition table?"></a>What is partition table?</h2><p>Partition table is a table that is divided into smaller parts. Each part is called a partition.</p><p>Why use partition table?</p><ol><li><strong>Performance</strong>: Partition table can improve the performance of the table. Because each partition can be stored in a separate file, the query can be executed faster.</li><li><strong>Maintenance</strong>: Partition table can make the maintenance of the table easier. Because each partition can be maintained separately, the maintenance of the table can be done faster.</li></ol><h2 id="How-to-create-a-partition-table"><a href="#How-to-create-a-partition-table" class="headerlink" title="How to create a partition table?"></a>How to create a partition table?</h2><ol><li><strong>Create a partition table</strong>:</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> measurement (</span><br><span class="line">    city_id         <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    logdate         <span class="type">date</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    peaktemp        <span class="type">int</span>,</span><br><span class="line">    unitsales       <span class="type">int</span></span><br><span class="line">) <span class="keyword">PARTITION</span> <span class="keyword">BY</span> <span class="keyword">RANGE</span> (logdate);</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>Create a partition table for each partition</strong>:</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> measurement_y2006m02 <span class="keyword">PARTITION</span> <span class="keyword">OF</span> measurement</span><br><span class="line">    <span class="keyword">FOR</span> <span class="keyword">VALUES</span> <span class="keyword">FROM</span> (<span class="string">&#x27;2006-02-01&#x27;</span>) <span class="keyword">TO</span> (<span class="string">&#x27;2006-03-01&#x27;</span>);</span><br><span class="line">...</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> measurement_y2007m11 <span class="keyword">PARTITION</span> <span class="keyword">OF</span> measurement</span><br><span class="line">    <span class="keyword">FOR</span> <span class="keyword">VALUES</span> <span class="keyword">FROM</span> (<span class="string">&#x27;2007-11-01&#x27;</span>) <span class="keyword">TO</span> (<span class="string">&#x27;2007-12-01&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="Partition-table-types"><a href="#Partition-table-types" class="headerlink" title="Partition table types"></a>Partition table types</h2><p>There are 3 basic types of partition table in PostgreSQL:</p><ol><li><strong>List Partition</strong>: The table is partitioned by explicitly listing which key value(s) appear in each partition.</li><li><strong>Range Partition</strong>: The table is partitioned into “ranges” defined by a key column or set of columns, with no overlap between the ranges of values assigned to different partitions.</li><li><strong>Hash Partition</strong>: The table is partitioned by specifying a modulus and a remainder for each partition.</li></ol><p>Combine these 3 basic types of partition table, we can create more complex partition table. This is called <strong>Composite Partitioning</strong>.</p><p>There are 4 types of composite partitioning:</p><ol><li><strong>List-Range Partition</strong>: The partition is divided into several ranges.<br>The step is: create table A partition by list, then create table A1 partition of A partition by range, then create table A1-1 partition of A1</li><li><strong>Range-List Partition</strong>: The partition is divided into several ranges.<br>The step is: create table A partition by range, then create table B of table A but partition by list.</li><li><strong>Range-Hash Partition</strong>: The partition is divided into several ranges.</li><li><strong>Hash-Range Partition</strong>: The partition is divided into several ranges.</li></ol><h2 id="Data-dictionary-about-partition-table"><a href="#Data-dictionary-about-partition-table" class="headerlink" title="Data dictionary about partition table"></a>Data dictionary about partition table</h2><ol><li><strong>pg_partitioned_table</strong>: This table stores the information about the partitioned table.</li><li><strong>pg_partition_rule</strong>: This table stores the information about the partition rule.</li><li><strong>pg_partition_column</strong>: This table stores the information about the partition column.</li><li><strong>pg_partition_index</strong>: This table stores the information about the partition index.</li><li><strong>pg_partition_constraint</strong>: This table stores the information about the partition constraint.</li><li><strong>pg_partition_constraint_column</strong>: This table stores the information about the partition constraint column.</li><li><strong>pg_partition_constraint_index</strong>: This table stores the information about the partition constraint index.</li></ol>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;The-best-practices-for-using-partition-table-in-PostgreSQL&quot;&gt;&lt;a href=&quot;#The-best-practices-for-using-partition-table-in-PostgreSQL&quot;</summary>
        
      
    
    
    
    
  </entry>
  
</feed>
